{"version":3,"file":"spotify-auth.umd.min.js","sources":["../../out-tsc/lib/src/shared/scopes-builder.ts","../../node_modules/tslib/tslib.es6.js","../../node_modules/src/util/root.ts","../../node_modules/src/util/isFunction.ts","../../node_modules/src/util/isArray.ts","../../node_modules/src/util/isObject.ts","../../node_modules/src/util/tryCatch.ts","../../node_modules/src/util/errorObject.ts","../../node_modules/src/util/UnsubscriptionError.ts","../../node_modules/src/Subscription.ts","../../node_modules/src/Observer.ts","../../node_modules/src/symbol/rxSubscriber.ts","../../node_modules/src/Subscriber.ts","../../node_modules/src/util/toSubscriber.ts","../../node_modules/src/symbol/observable.ts","../../node_modules/src/util/noop.ts","../../node_modules/src/util/pipe.ts","../../node_modules/src/Observable.ts","../../node_modules/src/observable/ScalarObservable.ts","../../node_modules/src/observable/EmptyObservable.ts","../../node_modules/src/util/isScheduler.ts","../../node_modules/src/observable/ArrayObservable.ts","../../node_modules/src/util/isArrayLike.ts","../../node_modules/src/util/isPromise.ts","../../node_modules/src/symbol/iterator.ts","../../node_modules/src/InnerSubscriber.ts","../../node_modules/src/util/subscribeToResult.ts","../../node_modules/src/OuterSubscriber.ts","../../node_modules/src/operators/mergeMap.ts","../../node_modules/src/util/identity.ts","../../node_modules/src/operators/mergeAll.ts","../../node_modules/src/observable/merge.ts","../../node_modules/src/util/ObjectUnsubscribedError.ts","../../node_modules/src/SubjectSubscription.ts","../../node_modules/src/Subject.ts","../../node_modules/src/operators/refCount.ts","../../node_modules/src/observable/ConnectableObservable.ts","../../node_modules/src/operators/multicast.ts","../../node_modules/src/operators/share.ts","../../node_modules/src/operator/share.ts","../../node_modules/packages/core/esm5/src/di/injection_token.js","../../node_modules/packages/core/esm5/src/util/decorators.js","../../node_modules/packages/core/esm5/src/metadata/di.js","../../node_modules/packages/core/esm5/src/change_detection/constants.js","../../node_modules/packages/core/esm5/src/metadata/directives.js","../../node_modules/packages/core/esm5/src/metadata/ng_module.js","../../node_modules/packages/core/esm5/src/metadata/view.js","../../node_modules/packages/core/esm5/src/version.js","../../node_modules/packages/core/esm5/src/di/metadata.js","../../node_modules/packages/core/esm5/src/util.js","../../node_modules/packages/core/esm5/src/di/forward_ref.js","../../node_modules/packages/core/esm5/src/di/injector.js","../../node_modules/packages/core/esm5/src/errors.js","../../node_modules/packages/core/esm5/src/error_handler.js","../../node_modules/packages/core/esm5/src/di/reflective_errors.js","../../node_modules/packages/core/esm5/src/di/reflective_key.js","../../node_modules/packages/core/esm5/src/type.js","../../node_modules/packages/core/esm5/src/reflection/reflection_capabilities.js","../../node_modules/packages/core/esm5/src/reflection/reflector.js","../../node_modules/packages/core/esm5/src/reflection/reflection.js","../../node_modules/packages/core/esm5/src/di/reflective_provider.js","../../node_modules/packages/core/esm5/src/di/reflective_injector.js","../../node_modules/packages/core/esm5/src/util/lang.js","../../node_modules/packages/core/esm5/src/application_init.js","../../node_modules/packages/core/esm5/src/application_tokens.js","../../node_modules/packages/core/esm5/src/console.js","../../node_modules/packages/core/esm5/src/linker/compiler.js","../../node_modules/packages/core/esm5/src/linker/component_factory.js","../../node_modules/packages/core/esm5/src/linker/component_factory_resolver.js","../../node_modules/packages/core/esm5/src/profile/wtf_impl.js","../../node_modules/packages/core/esm5/src/linker/ng_module_factory.js","../../node_modules/packages/core/esm5/src/profile/profile.js","../../node_modules/packages/core/esm5/src/event_emitter.js","../../node_modules/packages/core/esm5/src/zone/ng_zone.js","../../node_modules/packages/core/esm5/src/application_ref.js","../../node_modules/packages/core/esm5/src/testability/testability.js","../../node_modules/packages/core/esm5/src/render/api.js","../../node_modules/packages/core/esm5/src/linker/element_ref.js","../../node_modules/packages/core/esm5/src/linker/query_list.js","../../node_modules/packages/core/esm5/src/linker/template_ref.js","../../node_modules/packages/core/esm5/src/linker/view_container_ref.js","../../node_modules/packages/core/esm5/src/change_detection/change_detector_ref.js","../../node_modules/packages/core/esm5/src/debug/debug_node.js","../../node_modules/packages/core/esm5/src/linker/view_ref.js","../../node_modules/packages/core/esm5/src/change_detection/change_detection_util.js","../../node_modules/packages/core/esm5/src/change_detection/differs/default_iterable_differ.js","../../node_modules/packages/core/esm5/src/change_detection/differs/default_keyvalue_differ.js","../../node_modules/packages/core/esm5/src/change_detection/differs/iterable_differs.js","../../node_modules/packages/core/esm5/src/change_detection/differs/keyvalue_differs.js","../../node_modules/packages/core/esm5/src/change_detection/change_detection.js","../../node_modules/packages/core/esm5/src/i18n/tokens.js","../../node_modules/packages/core/esm5/src/platform_core_providers.js","../../node_modules/packages/core/esm5/src/application_module.js","../../node_modules/packages/core/esm5/src/security.js","../../node_modules/packages/core/esm5/src/view/types.js","../../node_modules/packages/core/esm5/src/view/errors.js","../../node_modules/packages/core/esm5/src/view/util.js","../../node_modules/packages/core/esm5/src/view/element.js","../../node_modules/packages/core/esm5/src/view/ng_module.js","../../node_modules/packages/core/esm5/src/view/view_attach.js","../../node_modules/packages/core/esm5/src/view/refs.js","../../node_modules/packages/core/esm5/src/view/provider.js","../../node_modules/packages/core/esm5/src/view/query.js","../../node_modules/packages/core/esm5/src/view/text.js","../../node_modules/packages/core/esm5/src/view/view.js","../../node_modules/packages/core/esm5/src/view/ng_content.js","../../node_modules/packages/core/esm5/src/view/pure_expression.js","../../node_modules/packages/core/esm5/src/view/services.js","../../node_modules/packages/core/esm5/src/view/entrypoint.js","../../node_modules/packages/core/esm5/src/render3/assert.js","../../node_modules/packages/core/esm5/src/render3/ng_dev_mode.js","../../node_modules/packages/core/esm5/src/render3/query.js","../../node_modules/packages/core/esm5/src/render3/instructions.js","../../node_modules/src/BehaviorSubject.ts","../../out-tsc/lib/src/service/token.service.ts","../../out-tsc/lib/src/service/auth.service.ts","../../out-tsc/lib/src/service/auth.guard.ts","../../node_modules/src/operators/tap.ts","../../node_modules/src/operator/do.ts","../../node_modules/src/add/operator/do.ts","../../out-tsc/lib/src/service/spotify-auth.interceptor.ts","../../out-tsc/lib/src/component/spotify-auth.component.ts","../../out-tsc/lib/src/module.ts"],"sourcesContent":["import { SpotifyScope } from \"./spotify-scope\";\n\nexport class ScopesBuilder {\n  \n  public static USERS: {[name: string]: SpotifyScope} = {\n    READ_PRIVATE: 'user-read-private',\n    READ_EMAIL: 'user-read-email',\n    READ_BIRTHDATE: 'user-read-birthdate'\n  };\n\n  public static PLAYLISTS: {[name: string]: SpotifyScope} = {\n    READ_PRIVATE: \"playlist-read-private\",\n    MODIFY_PRIVATE: \"playlist-modify-private\",\n    MODIFY_PPUBLIC: \"playlist-modify-public\",\n    READ_COLLABORATIVE: \"playlist-read-collaborative\"\n  };\n\n  public static HISTORY: {[name: string]: SpotifyScope} = {\n    TOP_READ: \"user-top-read\",\n    READ_RECENTLY_PLAYED: \"user-read-recently-played\"\n  }\n\n  public static LIBRARY: {[name: string]: SpotifyScope} = {\n    READ: \"user-library-read\",\n    MODIFY: \"user-library-modify\"    \n  }\n\n  public static CONNECT: {[name: string]: SpotifyScope} = {\n    READ_CURRENTLY_PLAYING: \"user-read-currently-playing\",\n    MODIFY_PLAYBACK_STATE: \"user-modify-playback-state\",\n    READ_PLAYBACK_STATE: \"user-read-playback-state\"\n  }\n\n  public static FOLLOW: {[name: string]: SpotifyScope} = {\n    READ: \"user-follow-read\",\n    MODIFY: \"user-follow-modify\"\n  }\n\n  public static PLAYBACK: {[name: string]: SpotifyScope} = {\n    STREAMING: \"streaming\"\n  }\n\n  private scopes: ({[name: string]: SpotifyScope} | SpotifyScope)[] = [\n    ScopesBuilder.USERS,\n    ScopesBuilder.PLAYLISTS,\n    ScopesBuilder.HISTORY,\n    ScopesBuilder.LIBRARY,\n    ScopesBuilder.CONNECT,\n    ScopesBuilder.FOLLOW,\n    ScopesBuilder.PLAYBACK\n  ];\n\n  /**\n   * \n   * @param args [] means no particular scopes or public only\n   */\n  public withScopes(...args: ({[name: string]: SpotifyScope} | SpotifyScope)[]): ScopesBuilder{\n    this.scopes = args;\n    return this;\n  }\n\n  public build(): string{\n    \n    const buffer: string[] = [];\n    \n    this.scopes.forEach(scope => {\n\n      if(typeof(scope) === 'string'){\n        buffer.push(scope);\n      }else{\n        Object.keys(scope).forEach((property) => buffer.push(scope[property]));\n      }\n    });\n\n    return buffer.join(' ');\n  }\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          // HACK(benlesh): To resolve an issue where Node users may have multiple\n          // copies of rxjs in their node_modules directory.\n          if (isTrustedSubscriber(destinationOrNext)) {\n            const trustedSubscriber = destinationOrNext[rxSubscriberSymbol]() as Subscriber<any>;\n            this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n            this.destination = trustedSubscriber;\n            trustedSubscriber.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated internal use only */ _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  /** @deprecated internal use only */ _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n\nfunction isTrustedSubscriber(obj: any) {\n  return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { PartialObserver, empty as emptyObserver } from '../Observer';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const observable = getSymbolObservable(root);\n\n/**\n * @deprecated use observable instead\n */\nexport const $$observable = observable;\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { noop } from './noop';\nimport { UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(op1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>, op9: UnaryFunction<H, I>): UnaryFunction<T, I>;\n/* tslint:enable:max-line-length */\n\nexport function pipe<T, R>(...fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  return pipeFromArray(fns);\n}\n\n/* @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input);\n  };\n}\n","import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { OperatorFunction } from './interfaces';\nimport { pipeFromArray } from './util/pipe';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | PromiseLike<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  /** @deprecated internal use only */ public source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n   * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n   * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n   * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n   *\n   * @example <caption>Subscribe with an Observer</caption>\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Subscribe with functions</caption>\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Cancel a subscription</caption>\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   *\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.syncErrorThrown = true;\n      sink.syncErrorValue = err;\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R>\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * @example\n   *\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   */\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(PromiseCtor?: PromiseConstructorLike) {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: IScheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: IScheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: IScheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { Scheduler } from '../Scheduler';\nexport function isScheduler(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: IScheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(...array: Array<T | IScheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` IScheduler, which means the `next`\n   * notifications are sent synchronously, although with a different IScheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | IScheduler>): Observable<T> {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      destination.syncErrorThrowable = true;\n      return result.subscribe(destination);\n    }\n  } else if (isArrayLike(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    const iterator = <any>result[Symbol_iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    const obs = result[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n  return null;\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, I|R> {\n  return function mergeMapOperatorFunction(source: Observable<T>) {\n    if (typeof resultSelector === 'number') {\n      concurrent = <number>resultSelector;\n      resultSelector = null;\n    }\n    return source.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n  };\n}\n\nexport class MergeMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<I>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.resultSelector, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<I>, value: T, index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _notifyResultSelector(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","\nimport { ObservableInput } from '../Observable';\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): MonoTypeOperatorFunction<T> {\n  return mergeMap(identity as (value: T, index: number) => ObservableInput<{}>, null, concurrent);\n}","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { ArrayObservable } from './ArrayObservable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(v1: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: IScheduler): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | IScheduler | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | IScheduler | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | IScheduler | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: IScheduler = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <IScheduler>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll(concurrent)(new ArrayObservable(<any>observables, scheduler)) as Observable<R>;\n}\n","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  };\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  /** @deprecated internal use only */ public _subject: Subject<T>;\n  /** @deprecated internal use only */ public _refCount: number = 0;\n  /** @deprecated internal use only */ public _connection: Subscription;\n  _isComplete = false;\n\n  constructor(/** @deprecated internal use only */ public source: Observable<T>,\n              /** @deprecated internal use only */ public subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  /** @deprecated internal use only */ public getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  /** @deprecated internal use only */ _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\nimport { FactoryOrValue, MonoTypeOperatorFunction, OperatorFunction, UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(subjectOrSubjectFactory: FactoryOrValue<Subject<T>>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: OperatorFunction<T, R>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): OperatorFunction<T, R> {\n  return function multicastOperatorFunction(source: Observable<T>): Observable<R> {\n    let subjectFactory: () => Subject<T>;\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return <Subject<T>>subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable: any = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n\n    return <ConnectableObservable<R>> connectable;\n  };\n}\n\nexport class MulticastOperator<T, R> implements Operator<T, R> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<R>) {\n  }\n  call(subscriber: Subscriber<R>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => refCount()(multicast(shareSubjectFactory)(source)) as Observable<T>;\n};\n","import { Observable } from '../Observable';\nimport { share as higherOrder } from '../operators/share';\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(this: Observable<T>): Observable<T> {\n  return higherOrder()(this) as Observable<T>;\n};\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar /**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nInjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nexport { InjectionToken };\nfunction InjectionToken_tsickle_Closure_declarations() {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    InjectionToken.prototype.ngMetadataName;\n    /** @type {?} */\n    InjectionToken.prototype._desc;\n}\n//# sourceMappingURL=injection_token.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\nexport function TypeDecorator() { }\nfunction TypeDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    <T extends Type<any>>(type: T): T;\n    */\n    /* TODO: handle strange member:\n    (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n    */\n}\nexport var /** @type {?} */ ANNOTATIONS = '__annotations__';\nexport var /** @type {?} */ PARAMETERS = '__paramaters__';\nexport var /** @type {?} */ PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nexport function makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new (/** @type {?} */ (DecoratorFactory))(objOrType);\n        var /** @type {?} */ TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makePropDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ decoratorInstance = new ((_a = (/** @type {?} */ (PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        return function PropDecorator(target, name) {\n            var /** @type {?} */ constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                (/** @type {?} */ (constructor))[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n//# sourceMappingURL=decorators.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { InjectionToken } from '../di/injection_token';\nimport { makeParamDecorator, makePropDecorator } from '../util/decorators';\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nexport var /** @type {?} */ ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nexport function AttributeDecorator() { }\nfunction AttributeDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (name: string): any;\n    */\n    /* TODO: handle strange member:\n    new (name: string): Attribute;\n    */\n}\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nvar /**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nQuery = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nexport { Query };\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {\\@link ContentChildren}.\n *\n * \\@stable\n * @record\n */\nexport function ContentChildrenDecorator() { }\nfunction ContentChildrenDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): any;\n    */\n    /* TODO: handle strange member:\n    new (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): Query;\n    */\n}\n/**\n * ContentChildren decorator and metadata.\n *\n *  \\@stable\n *  \\@Annotation\n */\nexport var /** @type {?} */ ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (tslib_1.__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * \\@stable\n * @record\n */\nexport function ContentChildDecorator() { }\nfunction ContentChildDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n    */\n    /* TODO: handle strange member:\n    new (selector: Type<any>|Function|string, opts?: {read?: any}): ContentChild;\n    */\n}\n/**\n * ContentChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (tslib_1.__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {\\@link ViewChildren}.\n *\n * \\@stable\n * @record\n */\nexport function ViewChildrenDecorator() { }\nfunction ViewChildrenDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n    */\n    /* TODO: handle strange member:\n    new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChildren;\n    */\n}\n/**\n * ViewChildren decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (tslib_1.__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {\\@link ViewChild}\n *\n * \\@stable\n * @record\n */\nexport function ViewChildDecorator() { }\nfunction ViewChildDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n    */\n    /* TODO: handle strange member:\n    new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChild;\n    */\n}\n/**\n * ViewChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (tslib_1.__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n//# sourceMappingURL=di.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    /**\n       * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n       */\n    OnPush: 0,\n    /**\n       * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n       */\n    Default: 1,\n};\nexport { ChangeDetectionStrategy };\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n/** @enum {number} */\nvar ChangeDetectorStatus = {\n    /**\n       * `CheckOnce` means that after calling detectChanges the mode of the change detector\n       * will become `Checked`.\n       */\n    CheckOnce: 0,\n    /**\n       * `Checked` means that the change detector should be skipped until its mode changes to\n       * `CheckOnce`.\n       */\n    Checked: 1,\n    /**\n       * `CheckAlways` means that after calling detectChanges the mode of the change detector\n       * will remain `CheckAlways`.\n       */\n    CheckAlways: 2,\n    /**\n       * `Detached` means that the change detector sub tree is not a part of the main tree and\n       * should be skipped.\n       */\n    Detached: 3,\n    /**\n       * `Errored` means that the change detector encountered an error checking a binding\n       * or calling a directive lifecycle method and is now in an inconsistent state. Change\n       * detectors in this state will no longer detect changes.\n       */\n    Errored: 4,\n    /**\n       * `Destroyed` means that the change detector is destroyed.\n       */\n    Destroyed: 5,\n};\nexport { ChangeDetectorStatus };\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nexport function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n//# sourceMappingURL=constants.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ChangeDetectionStrategy } from '../change_detection/constants';\nimport { makeDecorator, makePropDecorator } from '../util/decorators';\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nexport function DirectiveDecorator() { }\nfunction DirectiveDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (obj: Directive): TypeDecorator;\n    */\n    /* TODO: handle strange member:\n    new (obj: Directive): Directive;\n    */\n}\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nexport function ComponentDecorator() { }\nfunction ComponentDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (obj: Component): TypeDecorator;\n    */\n    /* TODO: handle strange member:\n    new (obj: Component): Component;\n    */\n}\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (tslib_1.__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n}, Directive);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nexport function PipeDecorator() { }\nfunction PipeDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (obj: Pipe): TypeDecorator;\n    */\n    /* TODO: handle strange member:\n    new (obj: Pipe): Pipe;\n    */\n}\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ Pipe = makeDecorator('Pipe', function (p) { return (tslib_1.__assign({ pure: true }, p)); });\n/**\n * Type of the Input decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nexport function InputDecorator() { }\nfunction InputDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (bindingPropertyName?: string): any;\n    */\n    /* TODO: handle strange member:\n    new (bindingPropertyName?: string): any;\n    */\n}\n/**\n * Input decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the Output decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nexport function OutputDecorator() { }\nfunction OutputDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (bindingPropertyName?: string): any;\n    */\n    /* TODO: handle strange member:\n    new (bindingPropertyName?: string): any;\n    */\n}\n/**\n * Output decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nexport function HostBindingDecorator() { }\nfunction HostBindingDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (hostPropertyName?: string): any;\n    */\n    /* TODO: handle strange member:\n    new (hostPropertyName?: string): any;\n    */\n}\n/**\n * HostBinding decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nexport function HostListenerDecorator() { }\nfunction HostListenerDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (eventName: string, args?: string[]): any;\n    */\n    /* TODO: handle strange member:\n    new (eventName: string, args?: string[]): any;\n    */\n}\n/**\n * HostListener decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n//# sourceMappingURL=directives.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { makeDecorator } from '../util/decorators';\n/**\n * A wrapper around a module that also includes the providers.\n *\n * \\@stable\n * @record\n */\nexport function ModuleWithProviders() { }\nfunction ModuleWithProviders_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ModuleWithProviders.prototype.ngModule;\n    /** @type {?|undefined} */\n    ModuleWithProviders.prototype.providers;\n}\n/**\n * Interface for schema definitions in \\@NgModules.\n *\n * \\@experimental\n * @record\n */\nexport function SchemaMetadata() { }\nfunction SchemaMetadata_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SchemaMetadata.prototype.name;\n}\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * \\@stable\n */\nexport var /** @type {?} */ CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * \\@experimental\n */\nexport var /** @type {?} */ NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nexport function NgModuleDecorator() { }\nfunction NgModuleDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (obj?: NgModule): TypeDecorator;\n    */\n    /* TODO: handle strange member:\n    new (obj?: NgModule): NgModule;\n    */\n}\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n//# sourceMappingURL=ng_module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ViewEncapsulation = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n       * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n       * selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n};\nexport { ViewEncapsulation };\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n//# sourceMappingURL=view.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar /**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nVersion = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nexport { Version };\nfunction Version_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Version.prototype.major;\n    /** @type {?} */\n    Version.prototype.minor;\n    /** @type {?} */\n    Version.prototype.patch;\n    /** @type {?} */\n    Version.prototype.full;\n}\n/**\n * \\@stable\n */\nexport var /** @type {?} */ VERSION = new Version('5.2.9');\n//# sourceMappingURL=version.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { makeDecorator, makeParamDecorator } from '../util/decorators';\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nexport function InjectDecorator() { }\nfunction InjectDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (token: any): any;\n    */\n    /* TODO: handle strange member:\n    new (token: any): Inject;\n    */\n}\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nexport function OptionalDecorator() { }\nfunction OptionalDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (): any;\n    */\n    /* TODO: handle strange member:\n    new (): Optional;\n    */\n}\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ Optional = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nexport function InjectableDecorator() { }\nfunction InjectableDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (): any;\n    */\n    /* TODO: handle strange member:\n    new (): Injectable;\n    */\n}\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ Injectable = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nexport function SelfDecorator() { }\nfunction SelfDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (): any;\n    */\n    /* TODO: handle strange member:\n    new (): Self;\n    */\n}\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nexport function SkipSelfDecorator() { }\nfunction SkipSelfDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (): any;\n    */\n    /* TODO: handle strange member:\n    new (): SkipSelf;\n    */\n}\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nexport function HostDecorator() { }\nfunction HostDecorator_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (): any;\n    */\n    /* TODO: handle strange member:\n    new (): Host;\n    */\n}\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nexport var /** @type {?} */ Host = makeParamDecorator('Host');\n//# sourceMappingURL=metadata.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar /** @type {?} */ __window = typeof window !== 'undefined' && window;\nvar /** @type {?} */ __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar /** @type {?} */ __global = typeof global !== 'undefined' && global;\nvar /** @type {?} */ _global = __window || __global || __self;\nvar /** @type {?} */ promise = Promise.resolve(0);\nexport { _global as global };\nvar /** @type {?} */ _symbolIterator = null;\n/**\n * @return {?}\n */\nexport function getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nexport function scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { stringify } from '../util';\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\nexport function ForwardRefFn() { }\nfunction ForwardRefFn_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (): any;\n    */\n}\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nexport function forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nexport function resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n//# sourceMappingURL=forward_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { stringify } from '../util';\nimport { resolveForwardRef } from './forward_ref';\nimport { Inject, Optional, Self, SkipSelf } from './metadata';\nexport var /** @type {?} */ SOURCE = '__source';\nvar /** @type {?} */ _THROW_IF_NOT_FOUND = new Object();\nexport var /** @type {?} */ THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = /** @class */ (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new _NullInjector();\n    return Injector;\n}());\nexport { Injector };\nfunction Injector_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Injector.THROW_IF_NOT_FOUND;\n    /** @type {?} */\n    Injector.NULL;\n    /**\n     * Retrieves an instance from the injector based on the provided token.\n     * If not found:\n     * - Throws an error if no `notFoundValue` that is not equal to\n     * Injector.THROW_IF_NOT_FOUND is given\n     * - Returns the `notFoundValue` otherwise\n     * @abstract\n     * @template T\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector.prototype.get = function (token, notFoundValue) { };\n    /**\n     * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n     * @suppress {duplicate}\n     * @abstract\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector.prototype.get = function (token, notFoundValue) { };\n}\nvar /** @type {?} */ IDENT = function (value) {\n    return value;\n};\nvar ɵ0 = IDENT;\nvar /** @type {?} */ EMPTY = /** @type {?} */ ([]);\nvar /** @type {?} */ CIRCULAR = IDENT;\nvar /** @type {?} */ MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar ɵ1 = MULTI_PROVIDER_FN;\nvar /** @type {?} */ GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ2 = GET_PROPERTY_NAME;\nvar /** @type {?} */ USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ2 });\nvar /** @type {?} */ NG_TOKEN_PATH = 'ngTokenPath';\nvar /** @type {?} */ NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n/** @enum {number} */\nvar OptionFlags = {\n    Optional: 1,\n    CheckSelf: 2,\n    CheckParent: 4,\n    Default: 6,\n};\nvar /** @type {?} */ NULL_INJECTOR = Injector.NULL;\nvar /** @type {?} */ NEW_LINE = /\\n/gm;\nvar /** @type {?} */ NO_NEW_LINE = 'ɵ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokens = /** @type {?} */ ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\nexport { StaticInjector };\nfunction StaticInjector_tsickle_Closure_declarations() {\n    /** @type {?} */\n    StaticInjector.prototype.parent;\n    /** @type {?} */\n    StaticInjector.prototype.source;\n    /** @type {?} */\n    StaticInjector.prototype._records;\n}\n/**\n * @record\n */\nfunction Record() { }\nfunction Record_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Record.prototype.fn;\n    /** @type {?} */\n    Record.prototype.useNew;\n    /** @type {?} */\n    Record.prototype.deps;\n    /** @type {?} */\n    Record.prototype.value;\n}\n/**\n * @record\n */\nfunction DependencyRecord() { }\nfunction DependencyRecord_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DependencyRecord.prototype.token;\n    /** @type {?} */\n    DependencyRecord.prototype.options;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue);\n    }\n    catch (/** @type {?} */ e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue) {\n    var /** @type {?} */ value;\n    if (record) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else {\n        value = parent.get(token, notFoundValue);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6 /* Default */;\n            var /** @type {?} */ token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @param {?=} source\n * @return {?}\n */\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = /** @type {?} */ ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\nexport { ɵ0, ɵ1, ɵ2 };\n//# sourceMappingURL=injector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport var /** @type {?} */ ERROR_TYPE = 'ngType';\nexport var /** @type {?} */ ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nexport var /** @type {?} */ ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nexport var /** @type {?} */ ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getType(error) {\n    return (/** @type {?} */ (error))[ERROR_TYPE];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n//# sourceMappingURL=errors.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ERROR_ORIGINAL_ERROR, getDebugContext, getErrorLogger, getOriginalError } from './errors';\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar /**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nexport { ErrorHandler };\nfunction ErrorHandler_tsickle_Closure_declarations() {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ErrorHandler.prototype._console;\n}\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nexport function wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n//# sourceMappingURL=error_handler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { wrappedError } from '../error_handler';\nimport { ERROR_ORIGINAL_ERROR } from '../errors';\nimport { stringify } from '../util';\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\nexport function InjectionError() { }\nfunction InjectionError_tsickle_Closure_declarations() {\n    /** @type {?} */\n    InjectionError.prototype.keys;\n    /** @type {?} */\n    InjectionError.prototype.injectors;\n    /** @type {?} */\n    InjectionError.prototype.constructResolvingMessage;\n    /** @type {?} */\n    InjectionError.prototype.addKey;\n}\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nexport function instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nexport function invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nexport function noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nexport function outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nexport function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n//# sourceMappingURL=reflective_errors.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { stringify } from '../util';\nimport { resolveForwardRef } from './forward_ref';\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar /**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nexport { ReflectiveKey };\nfunction ReflectiveKey_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ReflectiveKey.prototype.displayName;\n    /** @type {?} */\n    ReflectiveKey.prototype.token;\n    /** @type {?} */\n    ReflectiveKey.prototype.id;\n}\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nexport { KeyRegistry };\nfunction KeyRegistry_tsickle_Closure_declarations() {\n    /** @type {?} */\n    KeyRegistry.prototype._allKeys;\n}\nvar /** @type {?} */ _globalKeyRegistry = new KeyRegistry();\n//# sourceMappingURL=reflective_key.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nexport var /** @type {?} */ Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nexport function isType(v) {\n    return typeof v === 'function';\n}\n//# sourceMappingURL=type.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Type, isType } from '../type';\nimport { global, stringify } from '../util';\nimport { ANNOTATIONS, PARAMETERS, PROP_METADATA } from '../util/decorators';\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nexport var /** @type {?} */ DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nexport var /** @type {?} */ INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\nexport var /** @type {?} */ INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        var /** @type {?} */ typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.guards = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return {}; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\nexport { ReflectionCapabilities };\nfunction ReflectionCapabilities_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ReflectionCapabilities.prototype._reflect;\n}\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n//# sourceMappingURL=reflection_capabilities.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar /**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nReflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport { Reflector };\nfunction Reflector_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Reflector.prototype.reflectionCapabilities;\n}\n//# sourceMappingURL=reflector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ReflectionCapabilities } from './reflection_capabilities';\nimport { Reflector } from './reflector';\nexport { Reflector } from './reflector';\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nexport var /** @type {?} */ reflector = new Reflector(new ReflectionCapabilities());\n//# sourceMappingURL=reflection.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { reflector } from '../reflection/reflection';\nimport { Type } from '../type';\nimport { resolveForwardRef } from './forward_ref';\nimport { InjectionToken } from './injection_token';\nimport { Inject, Optional, Self, SkipSelf } from './metadata';\nimport { invalidProviderError, mixingMultiProvidersWithRegularProvidersError, noAnnotationError } from './reflective_errors';\nimport { ReflectiveKey } from './reflective_key';\n/**\n * @record\n */\nfunction NormalizedProvider() { }\nfunction NormalizedProvider_tsickle_Closure_declarations() {\n}\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar /**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nexport { ReflectiveDependency };\nfunction ReflectiveDependency_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ReflectiveDependency.prototype.key;\n    /** @type {?} */\n    ReflectiveDependency.prototype.optional;\n    /** @type {?} */\n    ReflectiveDependency.prototype.visibility;\n}\nvar /** @type {?} */ _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\nexport function ResolvedReflectiveProvider() { }\nfunction ResolvedReflectiveProvider_tsickle_Closure_declarations() {\n    /**\n     * A key, usually a `Type<any>`.\n     * @type {?}\n     */\n    ResolvedReflectiveProvider.prototype.key;\n    /**\n     * Factory function which can return an instance of an object represented by a key.\n     * @type {?}\n     */\n    ResolvedReflectiveProvider.prototype.resolvedFactories;\n    /**\n     * Indicates if the provider is a multi-provider or a regular provider.\n     * @type {?}\n     */\n    ResolvedReflectiveProvider.prototype.multiProvider;\n}\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\nexport { ResolvedReflectiveProvider_ };\nfunction ResolvedReflectiveProvider__tsickle_Closure_declarations() {\n    /** @type {?} */\n    ResolvedReflectiveProvider_.prototype.resolvedFactory;\n    /** @type {?} */\n    ResolvedReflectiveProvider_.prototype.key;\n    /** @type {?} */\n    ResolvedReflectiveProvider_.prototype.resolvedFactories;\n    /** @type {?} */\n    ResolvedReflectiveProvider_.prototype.multiProvider;\n}\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar /**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nexport { ResolvedReflectiveFactory };\nfunction ResolvedReflectiveFactory_tsickle_Closure_declarations() {\n    /**\n     * Factory function which can return an instance of an object represented by a key.\n     * @type {?}\n     */\n    ResolvedReflectiveFactory.prototype.factory;\n    /**\n     * Arguments (dependencies) to the `factory` function.\n     * @type {?}\n     */\n    ResolvedReflectiveFactory.prototype.dependencies;\n}\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nexport function resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nexport function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nexport function constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n//# sourceMappingURL=reflective_provider.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injector, THROW_IF_NOT_FOUND } from './injector';\nimport { Self, SkipSelf } from './metadata';\nimport { cyclicDependencyError, instantiationError, noProviderError, outOfBoundsError } from './reflective_errors';\nimport { ReflectiveKey } from './reflective_key';\nimport { resolveReflectiveProviders } from './reflective_provider';\n// Threshold for the dynamic version\nvar /** @type {?} */ UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar /**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve resolve} and\n     * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nexport { ReflectiveInjector };\nfunction ReflectiveInjector_tsickle_Closure_declarations() {\n    /**\n     * Parent of this injector.\n     *\n     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n     * -->\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n     *\n     * ```typescript\n     * var parent = ReflectiveInjector.resolveAndCreate([]);\n     * var child = parent.resolveAndCreateChild([]);\n     * expect(child.parent).toBe(parent);\n     * ```\n     * @abstract\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.parent = function () { };\n    /**\n     * Resolves an array of providers and creates a child injector from those providers.\n     *\n     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n     * -->\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n     *\n     * ```typescript\n     * class ParentProvider {}\n     * class ChildProvider {}\n     *\n     * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n     * var child = parent.resolveAndCreateChild([ChildProvider]);\n     *\n     * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n     * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n     * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n     * ```\n     *\n     * This function is slower than the corresponding `createChildFromResolved`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#createChildFromResolved createChildFromResolved}.\n     * @abstract\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) { };\n    /**\n     * Creates a child injector from previously resolved providers.\n     *\n     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n     * -->\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n     *\n     * ```typescript\n     * class ParentProvider {}\n     * class ChildProvider {}\n     *\n     * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n     * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n     *\n     * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n     * var child = parent.createChildFromResolved(childProviders);\n     *\n     * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n     * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n     * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n     * ```\n     * @abstract\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.createChildFromResolved = function (providers) { };\n    /**\n     * Resolves a provider and instantiates an object in the context of the injector.\n     *\n     * The created object does not get cached by the injector.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n     *\n     * var car = injector.resolveAndInstantiate(Car);\n     * expect(car.engine).toBe(injector.get(Engine));\n     * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n     * ```\n     * @abstract\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) { };\n    /**\n     * Instantiates an object using a resolved provider in the context of the injector.\n     *\n     * The created object does not get cached by the injector.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n     * var carProvider = ReflectiveInjector.resolve([Car])[0];\n     * var car = injector.instantiateResolved(carProvider);\n     * expect(car.engine).toBe(injector.get(Engine));\n     * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n     * ```\n     * @abstract\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.instantiateResolved = function (provider) { };\n    /**\n     * @abstract\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.get = function (token, notFoundValue) { };\n}\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (/** @type {?} */ e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (/** @type {?} */ e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = /** @type {?} */ (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\nexport { ReflectiveInjector_ };\nfunction ReflectiveInjector__tsickle_Closure_declarations() {\n    /** @type {?} */\n    ReflectiveInjector_.INJECTOR_KEY;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ReflectiveInjector_.prototype._constructionCounter;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ReflectiveInjector_.prototype._providers;\n    /** @type {?} */\n    ReflectiveInjector_.prototype.parent;\n    /** @type {?} */\n    ReflectiveInjector_.prototype.keyIds;\n    /** @type {?} */\n    ReflectiveInjector_.prototype.objs;\n}\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n//# sourceMappingURL=reflective_injector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nexport function isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nexport function isObservable(obj) {\n    // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n//# sourceMappingURL=lang.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isPromise } from '../src/util/lang';\nimport { Inject, Injectable, InjectionToken, Optional } from './di';\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nexport var /** @type {?} */ APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\nexport { ApplicationInitStatus };\nfunction ApplicationInitStatus_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ApplicationInitStatus.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ApplicationInitStatus.ctorParameters;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.resolve;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.reject;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.initialized;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.donePromise;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.done;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.appInits;\n}\n//# sourceMappingURL=application_init.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from './di';\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nexport var /** @type {?} */ APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nexport function _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nexport var /** @type {?} */ APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nexport var /** @type {?} */ PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nexport var /** @type {?} */ PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nexport var /** @type {?} */ APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nexport var /** @type {?} */ PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n//# sourceMappingURL=application_tokens.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from './di';\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\nexport { Console };\nfunction Console_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    Console.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    Console.ctorParameters;\n}\n//# sourceMappingURL=console.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, InjectionToken } from '../di';\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nvar /**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nexport { ModuleWithComponentFactories };\nfunction ModuleWithComponentFactories_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ModuleWithComponentFactories.prototype.ngModuleFactory;\n    /** @type {?} */\n    ModuleWithComponentFactories.prototype.componentFactories;\n}\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\nexport { Compiler };\nfunction Compiler_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    Compiler.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    Compiler.ctorParameters;\n}\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nexport var /** @type {?} */ COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar /**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nCompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nexport { CompilerFactory };\nfunction CompilerFactory_tsickle_Closure_declarations() {\n    /**\n     * @abstract\n     * @param {?=} options\n     * @return {?}\n     */\n    CompilerFactory.prototype.createCompiler = function (options) { };\n}\n//# sourceMappingURL=compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar /**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nComponentRef = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nexport { ComponentRef };\nfunction ComponentRef_tsickle_Closure_declarations() {\n    /**\n     * Location of the Host Element of this Component Instance.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.location = function () { };\n    /**\n     * The injector on which the component instance exists.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.injector = function () { };\n    /**\n     * The instance of the Component.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.instance = function () { };\n    /**\n     * The {\\@link ViewRef} of the Host View of this Component instance.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.hostView = function () { };\n    /**\n     * The {\\@link ChangeDetectorRef} of the Component instance.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.changeDetectorRef = function () { };\n    /**\n     * The component type.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.componentType = function () { };\n    /**\n     * Destroys the component instance and all of the data structures associated with it.\n     * @abstract\n     * @return {?}\n     */\n    ComponentRef.prototype.destroy = function () { };\n    /**\n     * Allows to register a callback that will be called when the component is destroyed.\n     * @abstract\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef.prototype.onDestroy = function (callback) { };\n}\n/**\n * \\@stable\n * @abstract\n */\nvar /**\n * \\@stable\n * @abstract\n */\nComponentFactory = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n/**\n * \\@stable\n * @abstract\n */\nexport { ComponentFactory };\nfunction ComponentFactory_tsickle_Closure_declarations() {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ComponentFactory.prototype.selector = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ComponentFactory.prototype.componentType = function () { };\n    /**\n     * selector for all <ng-content> elements in the component.\n     * @abstract\n     * @return {?}\n     */\n    ComponentFactory.prototype.ngContentSelectors = function () { };\n    /**\n     * the inputs of the component.\n     * @abstract\n     * @return {?}\n     */\n    ComponentFactory.prototype.inputs = function () { };\n    /**\n     * the outputs of the component.\n     * @abstract\n     * @return {?}\n     */\n    ComponentFactory.prototype.outputs = function () { };\n    /**\n     * Creates a new component.\n     * @abstract\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) { };\n}\n//# sourceMappingURL=component_factory.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { stringify } from '../util';\nimport { ComponentFactory } from './component_factory';\n/**\n * @param {?} component\n * @return {?}\n */\nexport function noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar /** @type {?} */ ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getComponent(error) {\n    return (/** @type {?} */ (error))[ERROR_COMPONENT];\n}\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nexport { ComponentFactoryResolver };\nfunction ComponentFactoryResolver_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ComponentFactoryResolver.NULL;\n    /**\n     * @abstract\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) { };\n}\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var /** @type {?} */ i = 0; i < factories.length; i++) {\n            var /** @type {?} */ factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nexport { CodegenComponentFactoryResolver };\nfunction CodegenComponentFactoryResolver_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CodegenComponentFactoryResolver.prototype._factories;\n    /** @type {?} */\n    CodegenComponentFactoryResolver.prototype._parent;\n    /** @type {?} */\n    CodegenComponentFactoryResolver.prototype._ngModule;\n}\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\nexport { ComponentFactoryBoundToModule };\nfunction ComponentFactoryBoundToModule_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.selector;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.componentType;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.ngContentSelectors;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.inputs;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.outputs;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.factory;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.ngModule;\n}\n//# sourceMappingURL=component_factory_resolver.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { global } from '../util';\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\nexport function WtfScopeFn() { }\nfunction WtfScopeFn_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (arg0?: any, arg1?: any): any;\n    */\n}\n/**\n * @record\n */\nfunction WTF() { }\nfunction WTF_tsickle_Closure_declarations() {\n    /** @type {?} */\n    WTF.prototype.trace;\n}\n/**\n * @record\n */\nfunction Trace() { }\nfunction Trace_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Trace.prototype.events;\n    /** @type {?} */\n    Trace.prototype.leaveScope;\n    /** @type {?} */\n    Trace.prototype.beginTimeRange;\n    /** @type {?} */\n    Trace.prototype.endTimeRange;\n}\n/**\n * @record\n */\nexport function Range() { }\nfunction Range_tsickle_Closure_declarations() {\n}\n/**\n * @record\n */\nfunction Events() { }\nfunction Events_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Events.prototype.createScope;\n}\n/**\n * @record\n */\nexport function Scope() { }\nfunction Scope_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (...args: any[] __* TODO #9100 __): any;\n    */\n}\nvar /** @type {?} */ trace;\nvar /** @type {?} */ events;\n/**\n * @return {?}\n */\nexport function detectWTF() {\n    var /** @type {?} */ wtf = (/** @type {?} */ (global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nexport function createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nexport function leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nexport function startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nexport function endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n//# sourceMappingURL=wtf_impl.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar /**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nNgModuleRef = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nexport { NgModuleRef };\nfunction NgModuleRef_tsickle_Closure_declarations() {\n    /**\n     * The injector that contains all of the providers of the NgModule.\n     * @abstract\n     * @return {?}\n     */\n    NgModuleRef.prototype.injector = function () { };\n    /**\n     * The ComponentFactoryResolver to get hold of the ComponentFactories\n     * declared in the `entryComponents` property of the module.\n     * @abstract\n     * @return {?}\n     */\n    NgModuleRef.prototype.componentFactoryResolver = function () { };\n    /**\n     * The NgModule instance.\n     * @abstract\n     * @return {?}\n     */\n    NgModuleRef.prototype.instance = function () { };\n    /**\n     * Destroys the module instance and all of the data structures associated with it.\n     * @abstract\n     * @return {?}\n     */\n    NgModuleRef.prototype.destroy = function () { };\n    /**\n     * Allows to register a callback that will be called when the module is destroyed.\n     * @abstract\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef.prototype.onDestroy = function (callback) { };\n}\n/**\n * @record\n */\nexport function InternalNgModuleRef() { }\nfunction InternalNgModuleRef_tsickle_Closure_declarations() {\n    /** @type {?} */\n    InternalNgModuleRef.prototype._bootstrapComponents;\n}\n/**\n * \\@experimental\n * @abstract\n */\nvar /**\n * \\@experimental\n * @abstract\n */\nNgModuleFactory = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n/**\n * \\@experimental\n * @abstract\n */\nexport { NgModuleFactory };\nfunction NgModuleFactory_tsickle_Closure_declarations() {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    NgModuleFactory.prototype.moduleType = function () { };\n    /**\n     * @abstract\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory.prototype.create = function (parentInjector) { };\n}\n//# sourceMappingURL=ng_module_factory.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { createScope, detectWTF, endTimeRange, leave, startTimeRange } from './wtf_impl';\n/**\n * True if WTF is enabled.\n */\nexport var /** @type {?} */ wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nexport var /** @type {?} */ wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nexport var /** @type {?} */ wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nexport var /** @type {?} */ wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nexport var /** @type {?} */ wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n//# sourceMappingURL=profile.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar /**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nEventEmitter = /** @class */ (function (_super) {\n    tslib_1.__extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        var /** @type {?} */ sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(Subject));\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nexport { EventEmitter };\nfunction EventEmitter_tsickle_Closure_declarations() {\n    /** @type {?} */\n    EventEmitter.prototype.__isAsync;\n}\n//# sourceMappingURL=event_emitter.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter } from '../event_emitter';\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar /**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nNgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (/** @type {?} */ ((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nexport { NgZone };\nfunction NgZone_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgZone.prototype.hasPendingMicrotasks;\n    /** @type {?} */\n    NgZone.prototype.hasPendingMacrotasks;\n    /**\n     * Whether there are no outstanding microtasks or macrotasks.\n     * @type {?}\n     */\n    NgZone.prototype.isStable;\n    /**\n     * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n     * @type {?}\n     */\n    NgZone.prototype.onUnstable;\n    /**\n     * Notifies when there is no more microtasks enqueued in the current VM Turn.\n     * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n     * For this reason this event can fire multiple times per VM Turn.\n     * @type {?}\n     */\n    NgZone.prototype.onMicrotaskEmpty;\n    /**\n     * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n     * implies we are about to relinquish VM turn.\n     * This event gets called just once.\n     * @type {?}\n     */\n    NgZone.prototype.onStable;\n    /**\n     * Notifies that an error has been delivered.\n     * @type {?}\n     */\n    NgZone.prototype.onError;\n}\n/**\n * @return {?}\n */\nfunction noop() { }\nvar /** @type {?} */ EMPTY_PAYLOAD = {};\n/**\n * @record\n */\nfunction NgZonePrivate() { }\nfunction NgZonePrivate_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgZonePrivate.prototype._outer;\n    /** @type {?} */\n    NgZonePrivate.prototype._inner;\n    /** @type {?} */\n    NgZonePrivate.prototype._nesting;\n    /** @type {?} */\n    NgZonePrivate.prototype.hasPendingMicrotasks;\n    /** @type {?} */\n    NgZonePrivate.prototype.hasPendingMacrotasks;\n    /** @type {?} */\n    NgZonePrivate.prototype.isStable;\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar /**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nNoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nexport { NoopNgZone };\nfunction NoopNgZone_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NoopNgZone.prototype.hasPendingMicrotasks;\n    /** @type {?} */\n    NoopNgZone.prototype.hasPendingMacrotasks;\n    /** @type {?} */\n    NoopNgZone.prototype.isStable;\n    /** @type {?} */\n    NoopNgZone.prototype.onUnstable;\n    /** @type {?} */\n    NoopNgZone.prototype.onMicrotaskEmpty;\n    /** @type {?} */\n    NoopNgZone.prototype.onStable;\n    /** @type {?} */\n    NoopNgZone.prototype.onError;\n}\n//# sourceMappingURL=ng_zone.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from 'rxjs/Observable';\nimport { merge } from 'rxjs/observable/merge';\nimport { share } from 'rxjs/operator/share';\nimport { ErrorHandler } from '../src/error_handler';\nimport { scheduleMicroTask, stringify } from '../src/util';\nimport { isPromise } from '../src/util/lang';\nimport { ApplicationInitStatus } from './application_init';\nimport { APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER } from './application_tokens';\nimport { Console } from './console';\nimport { Injectable, InjectionToken, Injector } from './di';\nimport { CompilerFactory } from './linker/compiler';\nimport { ComponentFactory } from './linker/component_factory';\nimport { ComponentFactoryBoundToModule, ComponentFactoryResolver } from './linker/component_factory_resolver';\nimport { NgModuleRef } from './linker/ng_module_factory';\nimport { wtfCreateScope, wtfLeave } from './profile/profile';\nimport { Testability, TestabilityRegistry } from './testability/testability';\nimport { NgZone, NoopNgZone } from './zone/ng_zone';\nvar /** @type {?} */ _devMode = true;\nvar /** @type {?} */ _runModeLocked = false;\nvar /** @type {?} */ _platform;\nexport var /** @type {?} */ ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * \\@stable\n * @return {?}\n */\nexport function enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nvar /**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nNgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nexport { NgProbeToken };\nfunction NgProbeToken_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgProbeToken.prototype.name;\n    /** @type {?} */\n    NgProbeToken.prototype.token;\n}\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nexport function createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nexport function createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ desc = \"Platform: \" + name;\n    var /** @type {?} */ marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var /** @type {?} */ injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nexport function assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n * \\@stable\n * @record\n */\nexport function BootstrapOptions() { }\nfunction BootstrapOptions_tsickle_Closure_declarations() {\n    /**\n     * Optionally specify which `NgZone` should be used.\n     *\n     * - Provide your own `NgZone` instance.\n     * - `zone.js` - Use default `NgZone` which requires `Zone.js`.\n     * - `noop` - Use `NoopNgZone` which does nothing.\n     * @type {?|undefined}\n     */\n    BootstrapOptions.prototype.ngZone;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var /** @type {?} */ ngZoneOption = options ? options.ngZone : undefined;\n        var /** @type {?} */ ngZone = getNgZone(ngZoneOption);\n        var /** @type {?} */ providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var /** @type {?} */ moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * @stable\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ options = optionsReducer({}, compilerOptions);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        var /** @type {?} */ appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef;\n}());\nexport { PlatformRef };\nfunction PlatformRef_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    PlatformRef.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    PlatformRef.ctorParameters;\n    /** @type {?} */\n    PlatformRef.prototype._modules;\n    /** @type {?} */\n    PlatformRef.prototype._destroyListeners;\n    /** @type {?} */\n    PlatformRef.prototype._destroyed;\n    /** @type {?} */\n    PlatformRef.prototype._injector;\n}\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    var /** @type {?} */ ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = tslib_1.__assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            merge(isCurrentlyStable, share.call(isStable));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (/** @type {?} */ e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef;\n}());\nexport { ApplicationRef };\nfunction ApplicationRef_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ApplicationRef.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ApplicationRef.ctorParameters;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ApplicationRef._tickScope;\n    /** @type {?} */\n    ApplicationRef.prototype._bootstrapListeners;\n    /** @type {?} */\n    ApplicationRef.prototype._views;\n    /** @type {?} */\n    ApplicationRef.prototype._runningTick;\n    /** @type {?} */\n    ApplicationRef.prototype._enforceNoNewChanges;\n    /** @type {?} */\n    ApplicationRef.prototype._stable;\n    /**\n     * Get a list of component types registered to this application.\n     * This list is populated even before the component is created.\n     * @type {?}\n     */\n    ApplicationRef.prototype.componentTypes;\n    /**\n     * Get a list of components registered to this application.\n     * @type {?}\n     */\n    ApplicationRef.prototype.components;\n    /**\n     * Returns an Observable that indicates when the application is stable or unstable.\n     * @type {?}\n     */\n    ApplicationRef.prototype.isStable;\n    /** @type {?} */\n    ApplicationRef.prototype._zone;\n    /** @type {?} */\n    ApplicationRef.prototype._console;\n    /** @type {?} */\n    ApplicationRef.prototype._injector;\n    /** @type {?} */\n    ApplicationRef.prototype._exceptionHandler;\n    /** @type {?} */\n    ApplicationRef.prototype._componentFactoryResolver;\n    /** @type {?} */\n    ApplicationRef.prototype._initStatus;\n}\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n//# sourceMappingURL=application_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '../di';\nimport { scheduleMicroTask } from '../util';\nimport { NgZone } from '../zone/ng_zone';\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     */\n    /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     */\n    /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (/** @type {?} */ ((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * Run callback when the application is stable\n     * @param callback function to be called after the application is stable\n     */\n    /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     */\n    /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\nexport { Testability };\nfunction Testability_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    Testability.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    Testability.ctorParameters;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Testability.prototype._pendingCount;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Testability.prototype._isZoneStable;\n    /**\n     * Whether any work was done since the last 'whenStable' callback. This is\n     * useful to detect if this could have potentially destabilized another\n     * component while it is stabilizing.\n     * \\@internal\n     * @type {?}\n     */\n    Testability.prototype._didWork;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Testability.prototype._callbacks;\n    /** @type {?} */\n    Testability.prototype._ngZone;\n}\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\nexport { TestabilityRegistry };\nfunction TestabilityRegistry_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    TestabilityRegistry.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    TestabilityRegistry.ctorParameters;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    TestabilityRegistry.prototype._applications;\n}\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\nexport function GetTestability() { }\nfunction GetTestability_tsickle_Closure_declarations() {\n    /** @type {?} */\n    GetTestability.prototype.addToWindow;\n    /** @type {?} */\n    GetTestability.prototype.findTestabilityInTree;\n}\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nexport function setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar /** @type {?} */ _testabilityGetter = new _NoopGetTestability();\n//# sourceMappingURL=testability.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from '../di';\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar /**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nRenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nexport { RenderComponentType };\nfunction RenderComponentType_tsickle_Closure_declarations() {\n    /** @type {?} */\n    RenderComponentType.prototype.id;\n    /** @type {?} */\n    RenderComponentType.prototype.templateUrl;\n    /** @type {?} */\n    RenderComponentType.prototype.slotCount;\n    /** @type {?} */\n    RenderComponentType.prototype.encapsulation;\n    /** @type {?} */\n    RenderComponentType.prototype.styles;\n    /** @type {?} */\n    RenderComponentType.prototype.animations;\n}\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nvar /**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nRenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nexport { RenderDebugInfo };\nfunction RenderDebugInfo_tsickle_Closure_declarations() {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.injector = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.component = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.providerTokens = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.references = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.context = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.source = function () { };\n}\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\nexport function DirectRenderer() { }\nfunction DirectRenderer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DirectRenderer.prototype.remove;\n    /** @type {?} */\n    DirectRenderer.prototype.appendChild;\n    /** @type {?} */\n    DirectRenderer.prototype.insertBefore;\n    /** @type {?} */\n    DirectRenderer.prototype.nextSibling;\n    /** @type {?} */\n    DirectRenderer.prototype.parentElement;\n}\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar /**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nRenderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nexport { Renderer };\nfunction Renderer_tsickle_Closure_declarations() {\n    /**\n     * @abstract\n     * @param {?} selectorOrNode\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?} name\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.createElement = function (parentElement, name, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} hostElement\n     * @return {?}\n     */\n    Renderer.prototype.createViewRoot = function (hostElement) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?} value\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.createText = function (parentElement, value, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    Renderer.prototype.projectNodes = function (parentElement, nodes) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    Renderer.prototype.attachViewAfter = function (node, viewRootNodes) { };\n    /**\n     * @abstract\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    Renderer.prototype.detachView = function (viewRootNodes) { };\n    /**\n     * @abstract\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    Renderer.prototype.destroyView = function (hostElement, viewAllNodes) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    Renderer.prototype.listen = function (renderElement, name, callback) { };\n    /**\n     * @abstract\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    Renderer.prototype.listenGlobal = function (target, name, callback) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    Renderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} attributeName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    Renderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) { };\n    /**\n     * Used only in debug mode to serialize property changes to dom nodes as attributes.\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    Renderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    Renderer.prototype.setElementClass = function (renderElement, className, isAdd) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    Renderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?=} args\n     * @return {?}\n     */\n    Renderer.prototype.invokeElementMethod = function (renderElement, methodName, args) { };\n    /**\n     * @abstract\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    Renderer.prototype.setText = function (renderNode, text) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} startingStyles\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    Renderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) { };\n}\nexport var /** @type {?} */ Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nvar /**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nRootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nexport { RootRenderer };\nfunction RootRenderer_tsickle_Closure_declarations() {\n    /**\n     * @abstract\n     * @param {?} componentType\n     * @return {?}\n     */\n    RootRenderer.prototype.renderComponent = function (componentType) { };\n}\n/**\n * \\@experimental\n * @record\n */\nexport function RendererType2() { }\nfunction RendererType2_tsickle_Closure_declarations() {\n    /** @type {?} */\n    RendererType2.prototype.id;\n    /** @type {?} */\n    RendererType2.prototype.encapsulation;\n    /** @type {?} */\n    RendererType2.prototype.styles;\n    /** @type {?} */\n    RendererType2.prototype.data;\n}\n/**\n * \\@experimental\n * @abstract\n */\nvar /**\n * \\@experimental\n * @abstract\n */\nRendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * \\@experimental\n * @abstract\n */\nexport { RendererFactory2 };\nfunction RendererFactory2_tsickle_Closure_declarations() {\n    /**\n     * @abstract\n     * @param {?} hostElement\n     * @param {?} type\n     * @return {?}\n     */\n    RendererFactory2.prototype.createRenderer = function (hostElement, type) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RendererFactory2.prototype.begin = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RendererFactory2.prototype.end = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RendererFactory2.prototype.whenRenderingDone = function () { };\n}\n/** @enum {number} */\nvar RendererStyleFlags2 = {\n    Important: 1,\n    DashCase: 2,\n};\nexport { RendererStyleFlags2 };\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n/**\n * \\@experimental\n * @abstract\n */\nvar /**\n * \\@experimental\n * @abstract\n */\nRenderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n/**\n * \\@experimental\n * @abstract\n */\nexport { Renderer2 };\nfunction Renderer2_tsickle_Closure_declarations() {\n    /**\n     * This property is allowed to be null / undefined,\n     * in which case the view engine won't call it.\n     * This is used as a performance optimization for production mode.\n     * @type {?}\n     */\n    Renderer2.prototype.destroyNode;\n    /**\n     * This field can be used to store arbitrary data on this renderer instance.\n     * This is useful for renderers that delegate to other renderers.\n     * @abstract\n     * @return {?}\n     */\n    Renderer2.prototype.data = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    Renderer2.prototype.destroy = function () { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    Renderer2.prototype.createElement = function (name, namespace) { };\n    /**\n     * @abstract\n     * @param {?} value\n     * @return {?}\n     */\n    Renderer2.prototype.createComment = function (value) { };\n    /**\n     * @abstract\n     * @param {?} value\n     * @return {?}\n     */\n    Renderer2.prototype.createText = function (value) { };\n    /**\n     * @abstract\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    Renderer2.prototype.appendChild = function (parent, newChild) { };\n    /**\n     * @abstract\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    Renderer2.prototype.insertBefore = function (parent, newChild, refChild) { };\n    /**\n     * @abstract\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    Renderer2.prototype.removeChild = function (parent, oldChild) { };\n    /**\n     * @abstract\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    Renderer2.prototype.selectRootElement = function (selectorOrNode) { };\n    /**\n     * Attention: On WebWorkers, this will always return a value,\n     * as we are asking for a result synchronously. I.e.\n     * the caller can't rely on checking whether this is null or not.\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    Renderer2.prototype.parentNode = function (node) { };\n    /**\n     * Attention: On WebWorkers, this will always return a value,\n     * as we are asking for a result synchronously. I.e.\n     * the caller can't rely on checking whether this is null or not.\n     * @abstract\n     * @param {?} node\n     * @return {?}\n     */\n    Renderer2.prototype.nextSibling = function (node) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    Renderer2.prototype.setAttribute = function (el, name, value, namespace) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    Renderer2.prototype.removeAttribute = function (el, name, namespace) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    Renderer2.prototype.addClass = function (el, name) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    Renderer2.prototype.removeClass = function (el, name) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?=} flags\n     * @return {?}\n     */\n    Renderer2.prototype.setStyle = function (el, style, value, flags) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} style\n     * @param {?=} flags\n     * @return {?}\n     */\n    Renderer2.prototype.removeStyle = function (el, style, flags) { };\n    /**\n     * @abstract\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Renderer2.prototype.setProperty = function (el, name, value) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    Renderer2.prototype.setValue = function (node, value) { };\n    /**\n     * @abstract\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    Renderer2.prototype.listen = function (target, eventName, callback) { };\n}\n//# sourceMappingURL=api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nvar /**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nexport { ElementRef };\nfunction ElementRef_tsickle_Closure_declarations() {\n    /**\n     * The underlying native element or `null` if direct access to native elements is not supported\n     * (e.g. when the application runs in a web worker).\n     *\n     * <div class=\"callout is-critical\">\n     *   <header>Use with caution</header>\n     *   <p>\n     *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n     *    data-binding provided by Angular instead. Alternatively you can take a look at {\\@link\n     * Renderer2}\n     *    which provides API that can safely be used even when direct access to native elements is not\n     *    supported.\n     *   </p>\n     *   <p>\n     *    Relying on direct DOM access creates tight coupling between your application and rendering\n     *    layers which will make it impossible to separate the two and deploy your application into a\n     *    web worker.\n     *   </p>\n     * </div>\n     * \\@stable\n     * @type {?}\n     */\n    ElementRef.prototype.nativeElement;\n}\n//# sourceMappingURL=element_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter } from '../event_emitter';\nimport { getSymbolIterator } from '../util';\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar /**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nQueryList = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten(res);\n        (/** @type {?} */ (this)).dirty = false;\n        (/** @type {?} */ (this)).length = this._results.length;\n        (/** @type {?} */ (this)).last = this._results[this.length - 1];\n        (/** @type {?} */ (this)).first = this._results[0];\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nexport { QueryList };\nfunction QueryList_tsickle_Closure_declarations() {\n    /** @type {?} */\n    QueryList.prototype.dirty;\n    /** @type {?} */\n    QueryList.prototype._results;\n    /** @type {?} */\n    QueryList.prototype.changes;\n    /** @type {?} */\n    QueryList.prototype.length;\n    /** @type {?} */\n    QueryList.prototype.first;\n    /** @type {?} */\n    QueryList.prototype.last;\n}\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n//# sourceMappingURL=query_list.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {\\@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n * \\@stable\n * @abstract\n */\nvar /**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {\\@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n * \\@stable\n * @abstract\n */\nTemplateRef = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {\\@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n * \\@stable\n * @abstract\n */\nexport { TemplateRef };\nfunction TemplateRef_tsickle_Closure_declarations() {\n    /**\n     * The location in the View where the Embedded View logically belongs to.\n     *\n     * The data-binding and injection contexts of Embedded Views created from this `TemplateRef`\n     * inherit from the contexts of this location.\n     *\n     * Typically new Embedded Views are attached to the View Container of this location, but in\n     * advanced use-cases, the View can be attached to a different container while keeping the\n     * data-binding and injection context from the original location.\n     *\n     * @abstract\n     * @return {?}\n     */\n    TemplateRef.prototype.elementRef = function () { };\n    /**\n     * @abstract\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef.prototype.createEmbeddedView = function (context) { };\n}\n//# sourceMappingURL=template_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar /**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nexport { ViewContainerRef };\nfunction ViewContainerRef_tsickle_Closure_declarations() {\n    /**\n     * Anchor element that specifies the location of this container in the containing View.\n     * <!-- TODO: rename to anchorElement -->\n     * @abstract\n     * @return {?}\n     */\n    ViewContainerRef.prototype.element = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ViewContainerRef.prototype.injector = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ViewContainerRef.prototype.parentInjector = function () { };\n    /**\n     * Destroys all Views in this container.\n     * @abstract\n     * @return {?}\n     */\n    ViewContainerRef.prototype.clear = function () { };\n    /**\n     * Returns the {\\@link ViewRef} for the View located in this container at the specified index.\n     * @abstract\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.get = function (index) { };\n    /**\n     * Returns the number of Views currently attached to this container.\n     * @abstract\n     * @return {?}\n     */\n    ViewContainerRef.prototype.length = function () { };\n    /**\n     * Instantiates an Embedded View based on the {\\@link TemplateRef `templateRef`} and inserts it\n     * into this container at the specified `index`.\n     *\n     * If `index` is not specified, the new View will be inserted as the last View in the container.\n     *\n     * Returns the {\\@link ViewRef} for the newly created View.\n     * @abstract\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) { };\n    /**\n     * Instantiates a single {\\@link Component} and inserts its Host View into this container at the\n     * specified `index`.\n     *\n     * The component is instantiated using its {\\@link ComponentFactory} which can be obtained via\n     * {\\@link ComponentFactoryResolver#resolveComponentFactory resolveComponentFactory}.\n     *\n     * If `index` is not specified, the new View will be inserted as the last View in the container.\n     *\n     * You can optionally specify the {\\@link Injector} that will be used as parent for the Component.\n     *\n     * Returns the {\\@link ComponentRef} of the Host View created for the newly instantiated Component.\n     * @abstract\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) { };\n    /**\n     * Inserts a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n     *\n     * If `index` is not specified, the new View will be inserted as the last View in the container.\n     *\n     * Returns the inserted {\\@link ViewRef}.\n     * @abstract\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.insert = function (viewRef, index) { };\n    /**\n     * Moves a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n     *\n     * Returns the inserted {\\@link ViewRef}.\n     * @abstract\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef.prototype.move = function (viewRef, currentIndex) { };\n    /**\n     * Returns the index of the View, specified via {\\@link ViewRef}, within the current container or\n     * `-1` if this container doesn't contain the View.\n     * @abstract\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef.prototype.indexOf = function (viewRef) { };\n    /**\n     * Destroys a View attached to this container at the specified `index`.\n     *\n     * If `index` is not specified, the last View in the container will be removed.\n     * @abstract\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.remove = function (index) { };\n    /**\n     * Use along with {\\@link #insert} to move a View within the current container.\n     *\n     * If the `index` param is omitted, the last {\\@link ViewRef} is detached.\n     * @abstract\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.detach = function (index) { };\n}\n//# sourceMappingURL=view_container_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n * @abstract\n */\nvar /**\n * \\@stable\n * @abstract\n */\nChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nexport { ChangeDetectorRef };\nfunction ChangeDetectorRef_tsickle_Closure_declarations() {\n    /**\n     * Marks all {\\@link ChangeDetectionStrategy#OnPush OnPush} ancestors as to be checked.\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))\n     *\n     * ```typescript\n     * \\@Component({\n     *   selector: 'cmp',\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     * })\n     * class Cmp {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'app',\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     *   template: `\n     *     <cmp><cmp>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.markForCheck = function () { };\n    /**\n     * Detaches the change detector from the change detector tree.\n     *\n     * The detached change detector will not be checked until it is reattached.\n     *\n     * This can also be used in combination with {\\@link ChangeDetectorRef#detectChanges detectChanges}\n     * to implement local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.detach = function () { };\n    /**\n     * Checks the change detector and its children.\n     *\n     * This can also be used in combination with {\\@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check\n     * every five seconds.\n     *\n     * See {\\@link ChangeDetectorRef#detach detach} for more information.\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.detectChanges = function () { };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't introduce\n     * other changes.\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.checkNoChanges = function () { };\n    /**\n     * Reattach the change detector to the change detector tree.\n     *\n     * This also marks OnPush ancestors as to be checked. This reattached change detector will be\n     * checked during the next change detection run.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class App {\n     *   live = true;\n     * }\n     * ```\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.reattach = function () { };\n}\n//# sourceMappingURL=change_detector_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\nexport { EventListener };\nfunction EventListener_tsickle_Closure_declarations() {\n    /** @type {?} */\n    EventListener.prototype.name;\n    /** @type {?} */\n    EventListener.prototype.callback;\n}\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar /**\n * \\@experimental All debugging apis are currently experimental.\n */\nDebugNode = /** @class */ (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport { DebugNode };\nfunction DebugNode_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DebugNode.prototype.nativeNode;\n    /** @type {?} */\n    DebugNode.prototype.listeners;\n    /** @type {?} */\n    DebugNode.prototype.parent;\n    /** @type {?} */\n    DebugNode.prototype._debugContext;\n}\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar /**\n * \\@experimental All debugging apis are currently experimental.\n */\nDebugElement = /** @class */ (function (_super) {\n    tslib_1.__extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport { DebugElement };\nfunction DebugElement_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DebugElement.prototype.name;\n    /** @type {?} */\n    DebugElement.prototype.properties;\n    /** @type {?} */\n    DebugElement.prototype.attributes;\n    /** @type {?} */\n    DebugElement.prototype.classes;\n    /** @type {?} */\n    DebugElement.prototype.styles;\n    /** @type {?} */\n    DebugElement.prototype.childNodes;\n    /** @type {?} */\n    DebugElement.prototype.nativeElement;\n}\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nexport function asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar /** @type {?} */ _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nexport function getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\nexport function getAllDebugNodes() {\n    return Array.from(_nativeNodeToDebugNode.values());\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\nexport function Predicate() { }\nfunction Predicate_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (value: T): boolean;\n    */\n}\n//# sourceMappingURL=debug_node.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ChangeDetectorRef } from '../change_detection/change_detector_ref';\n/**\n * \\@stable\n * @abstract\n */\nvar /**\n * \\@stable\n * @abstract\n */\nViewRef = /** @class */ (function (_super) {\n    tslib_1.__extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * \\@stable\n * @abstract\n */\nexport { ViewRef };\nfunction ViewRef_tsickle_Closure_declarations() {\n    /**\n     * Destroys the view and all of the data structures associated with it.\n     * @abstract\n     * @return {?}\n     */\n    ViewRef.prototype.destroy = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ViewRef.prototype.destroyed = function () { };\n    /**\n     * @abstract\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef.prototype.onDestroy = function (callback) { };\n}\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar /**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nEmbeddedViewRef = /** @class */ (function (_super) {\n    tslib_1.__extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nexport { EmbeddedViewRef };\nfunction EmbeddedViewRef_tsickle_Closure_declarations() {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    EmbeddedViewRef.prototype.context = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    EmbeddedViewRef.prototype.rootNodes = function () { };\n}\n/**\n * @record\n */\nexport function InternalViewRef() { }\nfunction InternalViewRef_tsickle_Closure_declarations() {\n    /** @type {?} */\n    InternalViewRef.prototype.detachFromAppRef;\n    /** @type {?} */\n    InternalViewRef.prototype.attachToAppRef;\n}\n//# sourceMappingURL=view_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getSymbolIterator, looseIdentical } from '../util';\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar /**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nWrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    /**\n     * Creates a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * Creates a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.unwrap = /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    /**\n     * Returns true if `value` is a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.isWrapped = /**\n     * Returns true if `value` is a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nexport { WrappedValue };\nfunction WrappedValue_tsickle_Closure_declarations() {\n    /**\n     * @deprecated from 5.3, use `unwrap()` instead - will switch to protected\n     * @type {?}\n     */\n    WrappedValue.prototype.wrapped;\n}\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar /**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nSimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nexport { SimpleChange };\nfunction SimpleChange_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SimpleChange.prototype.previousValue;\n    /** @type {?} */\n    SimpleChange.prototype.currentValue;\n    /** @type {?} */\n    SimpleChange.prototype.firstChange;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nexport function areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nexport function iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nexport function isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n//# sourceMappingURL=change_detection_util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { looseIdentical, stringify } from '../../util';\nimport { isListLikeIterable, iterateListLike } from '../change_detection_util';\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nexport { DefaultIterableDifferFactory };\nvar /** @type {?} */ trackByIdentity = function (index, item) { return item; };\nvar ɵ0 = trackByIdentity;\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar /**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nDefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? /** @type {?} */\n                ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nexport { DefaultIterableDiffer };\nfunction DefaultIterableDiffer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DefaultIterableDiffer.prototype.length;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype.collection;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._linkedRecords;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._unlinkedRecords;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._previousItHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._itHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._itTail;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._additionsHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._additionsTail;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._movesHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._movesTail;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._removalsHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._removalsTail;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._identityChangesHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._identityChangesTail;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._trackByFn;\n}\n/**\n * \\@stable\n */\nvar /**\n * \\@stable\n */\nIterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\n/**\n * \\@stable\n */\nexport { IterableChangeRecord_ };\nfunction IterableChangeRecord__tsickle_Closure_declarations() {\n    /** @type {?} */\n    IterableChangeRecord_.prototype.currentIndex;\n    /** @type {?} */\n    IterableChangeRecord_.prototype.previousIndex;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextPrevious;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._prev;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._next;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._prevDup;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextDup;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._prevRemoved;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextRemoved;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextAdded;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextMoved;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextIdentityChange;\n    /** @type {?} */\n    IterableChangeRecord_.prototype.item;\n    /** @type {?} */\n    IterableChangeRecord_.prototype.trackById;\n}\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nfunction _DuplicateItemRecordList_tsickle_Closure_declarations() {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    _DuplicateItemRecordList.prototype._head;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    _DuplicateItemRecordList.prototype._tail;\n}\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\nfunction _DuplicateMap_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _DuplicateMap.prototype.map;\n}\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\nexport { ɵ0 };\n//# sourceMappingURL=default_iterable_differ.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { looseIdentical, stringify } from '../../util';\nimport { isJsObject } from '../change_detection_util';\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nexport { DefaultKeyValueDifferFactory };\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\nexport { DefaultKeyValueDiffer };\nfunction DefaultKeyValueDiffer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._records;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._mapHead;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._appendAfter;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._previousMapHead;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._changesHead;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._changesTail;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._additionsHead;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._additionsTail;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._removalsHead;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._removalsTail;\n}\n/**\n * \\@stable\n */\nvar /**\n * \\@stable\n */\nKeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\nfunction KeyValueChangeRecord__tsickle_Closure_declarations() {\n    /** @type {?} */\n    KeyValueChangeRecord_.prototype.previousValue;\n    /** @type {?} */\n    KeyValueChangeRecord_.prototype.currentValue;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._nextPrevious;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._next;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._prev;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._nextAdded;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._nextRemoved;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._nextChanged;\n    /** @type {?} */\n    KeyValueChangeRecord_.prototype.key;\n}\n//# sourceMappingURL=default_keyvalue_differ.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Optional, SkipSelf } from '../../di';\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\nexport function IterableDiffer() { }\nfunction IterableDiffer_tsickle_Closure_declarations() {\n    /**\n     * Compute a difference between the previous state and the new `object` state.\n     *\n     * \\@param object containing the new value.\n     * \\@return an object describing the difference. The return value is only valid until the next\n     * `diff()` invocation.\n     * @type {?}\n     */\n    IterableDiffer.prototype.diff;\n}\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\nexport function IterableChanges() { }\nfunction IterableChanges_tsickle_Closure_declarations() {\n    /**\n     * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n     * to each item.\n     * @type {?}\n     */\n    IterableChanges.prototype.forEachItem;\n    /**\n     * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n     * new `Iterable`.\n     *\n     * NOTE: These are not necessarily the actual operations which were applied to the original\n     * `Iterable`, rather these are a set of computed operations which may not be the same as the\n     * ones applied.\n     *\n     * \\@param record A change which needs to be applied\n     * \\@param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n     *        original `Iterable` location, where as `previousIndex` refers to the transient location\n     *        of the item, after applying the operations up to this point.\n     * \\@param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n     *        original `Iterable` location, where as `currentIndex` refers to the transient location\n     *        of the item, after applying the operations up to this point.\n     * @type {?}\n     */\n    IterableChanges.prototype.forEachOperation;\n    /**\n     * Iterate over changes in the order of original `Iterable` showing where the original items\n     * have moved.\n     * @type {?}\n     */\n    IterableChanges.prototype.forEachPreviousItem;\n    /**\n     * Iterate over all added items.\n     * @type {?}\n     */\n    IterableChanges.prototype.forEachAddedItem;\n    /**\n     * Iterate over all moved items.\n     * @type {?}\n     */\n    IterableChanges.prototype.forEachMovedItem;\n    /**\n     * Iterate over all removed items.\n     * @type {?}\n     */\n    IterableChanges.prototype.forEachRemovedItem;\n    /**\n     * Iterate over all items which had their identity (as computed by the `TrackByFunction`)\n     * changed.\n     * @type {?}\n     */\n    IterableChanges.prototype.forEachIdentityChange;\n}\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\nexport function IterableChangeRecord() { }\nfunction IterableChangeRecord_tsickle_Closure_declarations() {\n    /**\n     * Current index of the item in `Iterable` or null if removed.\n     * @type {?}\n     */\n    IterableChangeRecord.prototype.currentIndex;\n    /**\n     * Previous index of the item in `Iterable` or null if added.\n     * @type {?}\n     */\n    IterableChangeRecord.prototype.previousIndex;\n    /**\n     * The item.\n     * @type {?}\n     */\n    IterableChangeRecord.prototype.item;\n    /**\n     * Track by identity as computed by the `TrackByFunction`.\n     * @type {?}\n     */\n    IterableChangeRecord.prototype.trackById;\n}\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\nexport function CollectionChangeRecord() { }\nfunction CollectionChangeRecord_tsickle_Closure_declarations() {\n}\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\nexport function TrackByFunction() { }\nfunction TrackByFunction_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (index: number, item: T): any;\n    */\n}\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\nexport function IterableDifferFactory() { }\nfunction IterableDifferFactory_tsickle_Closure_declarations() {\n    /** @type {?} */\n    IterableDifferFactory.prototype.supports;\n    /** @type {?} */\n    IterableDifferFactory.prototype.create;\n}\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar /**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nIterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nexport { IterableDiffers };\nfunction IterableDiffers_tsickle_Closure_declarations() {\n    /**\n     * @deprecated v4.0.0 - Should be private\n     * @type {?}\n     */\n    IterableDiffers.prototype.factories;\n}\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n//# sourceMappingURL=iterable_differs.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Optional, SkipSelf } from '../../di';\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\nexport function KeyValueDiffer() { }\nfunction KeyValueDiffer_tsickle_Closure_declarations() {\n    /**\n     * Compute a difference between the previous state and the new `object` state.\n     *\n     * \\@param object containing the new value.\n     * \\@return an object describing the difference. The return value is only valid until the next\n     * `diff()` invocation.\n     * @type {?}\n     */\n    KeyValueDiffer.prototype.diff;\n    /**\n     * Compute a difference between the previous state and the new `object` state.\n     *\n     * \\@param object containing the new value.\n     * \\@return an object describing the difference. The return value is only valid until the next\n     * `diff()` invocation.\n     * @type {?}\n     */\n    KeyValueDiffer.prototype.diff;\n}\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\nexport function KeyValueChanges() { }\nfunction KeyValueChanges_tsickle_Closure_declarations() {\n    /**\n     * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n     * to each item.\n     * @type {?}\n     */\n    KeyValueChanges.prototype.forEachItem;\n    /**\n     * Iterate over changes in the order of original Map showing where the original items\n     * have moved.\n     * @type {?}\n     */\n    KeyValueChanges.prototype.forEachPreviousItem;\n    /**\n     * Iterate over all keys for which values have changed.\n     * @type {?}\n     */\n    KeyValueChanges.prototype.forEachChangedItem;\n    /**\n     * Iterate over all added items.\n     * @type {?}\n     */\n    KeyValueChanges.prototype.forEachAddedItem;\n    /**\n     * Iterate over all removed items.\n     * @type {?}\n     */\n    KeyValueChanges.prototype.forEachRemovedItem;\n}\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\nexport function KeyValueChangeRecord() { }\nfunction KeyValueChangeRecord_tsickle_Closure_declarations() {\n    /**\n     * Current key in the Map.\n     * @type {?}\n     */\n    KeyValueChangeRecord.prototype.key;\n    /**\n     * Current value for the key or `null` if removed.\n     * @type {?}\n     */\n    KeyValueChangeRecord.prototype.currentValue;\n    /**\n     * Previous value for the key or `null` if added.\n     * @type {?}\n     */\n    KeyValueChangeRecord.prototype.previousValue;\n}\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\nexport function KeyValueDifferFactory() { }\nfunction KeyValueDifferFactory_tsickle_Closure_declarations() {\n    /**\n     * Test to see if the differ knows how to diff this kind of object.\n     * @type {?}\n     */\n    KeyValueDifferFactory.prototype.supports;\n    /**\n     * Create a `KeyValueDiffer`.\n     * @type {?}\n     */\n    KeyValueDifferFactory.prototype.create;\n}\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar /**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nKeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nexport { KeyValueDiffers };\nfunction KeyValueDiffers_tsickle_Closure_declarations() {\n    /**\n     * @deprecated v4.0.0 - Should be private.\n     * @type {?}\n     */\n    KeyValueDiffers.prototype.factories;\n}\n//# sourceMappingURL=keyvalue_differs.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DefaultIterableDifferFactory } from './differs/default_iterable_differ';\nimport { DefaultKeyValueDifferFactory } from './differs/default_keyvalue_differ';\nimport { IterableDiffers } from './differs/iterable_differs';\nimport { KeyValueDiffers } from './differs/keyvalue_differs';\nexport { SimpleChange, WrappedValue, devModeEqual } from './change_detection_util';\nexport { ChangeDetectorRef } from './change_detector_ref';\nexport { ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy } from './constants';\nexport { DefaultIterableDifferFactory } from './differs/default_iterable_differ';\nexport { DefaultIterableDiffer } from './differs/default_iterable_differ';\nexport { DefaultKeyValueDifferFactory } from './differs/default_keyvalue_differ';\nexport { IterableDiffers } from './differs/iterable_differs';\nexport { KeyValueDiffers } from './differs/keyvalue_differs';\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar /** @type {?} */ keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar /** @type {?} */ iterableDiff = [new DefaultIterableDifferFactory()];\nexport var /** @type {?} */ defaultIterableDiffers = new IterableDiffers(iterableDiff);\nexport var /** @type {?} */ defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n//# sourceMappingURL=change_detection.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from '../di/injection_token';\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the {\\@linkDocs guide/i18n#setting-up-locale i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nexport var /** @type {?} */ LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the {\\@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nexport var /** @type {?} */ TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {\\@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the {\\@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nexport var /** @type {?} */ TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nexport { MissingTranslationStrategy };\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n//# sourceMappingURL=tokens.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { PlatformRef, createPlatformFactory } from './application_ref';\nimport { PLATFORM_ID } from './application_tokens';\nimport { Console } from './console';\nimport { Injector } from './di';\nimport { TestabilityRegistry } from './testability/testability';\nvar /** @type {?} */ _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nexport var /** @type {?} */ platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n//# sourceMappingURL=platform_core_providers.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ApplicationInitStatus } from './application_init';\nimport { ApplicationRef } from './application_ref';\nimport { APP_ID_RANDOM_PROVIDER } from './application_tokens';\nimport { IterableDiffers, KeyValueDiffers, defaultIterableDiffers, defaultKeyValueDiffers } from './change_detection/change_detection';\nimport { Inject, Optional, SkipSelf } from './di/metadata';\nimport { LOCALE_ID } from './i18n/tokens';\nimport { Compiler } from './linker/compiler';\nimport { NgModule } from './metadata';\n/**\n * @return {?}\n */\nexport function _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nexport function _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nexport function _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        ApplicationRef,\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\nexport { ApplicationModule };\nfunction ApplicationModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ApplicationModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ApplicationModule.ctorParameters;\n}\n//# sourceMappingURL=application_module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nexport { SecurityContext };\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar /**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nSanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nexport { Sanitizer };\nfunction Sanitizer_tsickle_Closure_declarations() {\n    /**\n     * @abstract\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    Sanitizer.prototype.sanitize = function (context, value) { };\n}\n//# sourceMappingURL=security.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\nexport function DefinitionFactory() { }\nfunction DefinitionFactory_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (logger: NodeLogger): D;\n    */\n}\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\nexport function NodeLogger() { }\nfunction NodeLogger_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (): () => void;\n    */\n}\n/**\n * @record\n */\nexport function Definition() { }\nfunction Definition_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Definition.prototype.factory;\n}\n/**\n * @record\n */\nexport function NgModuleDefinition() { }\nfunction NgModuleDefinition_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgModuleDefinition.prototype.providers;\n    /** @type {?} */\n    NgModuleDefinition.prototype.providersByKey;\n}\n/**\n * @record\n */\nexport function NgModuleDefinitionFactory() { }\nfunction NgModuleDefinitionFactory_tsickle_Closure_declarations() {\n}\n/**\n * @record\n */\nexport function ViewDefinition() { }\nfunction ViewDefinition_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ViewDefinition.prototype.flags;\n    /** @type {?} */\n    ViewDefinition.prototype.updateDirectives;\n    /** @type {?} */\n    ViewDefinition.prototype.updateRenderer;\n    /** @type {?} */\n    ViewDefinition.prototype.handleEvent;\n    /**\n     * Order: Depth first.\n     * Especially providers are before elements / anchors.\n     * @type {?}\n     */\n    ViewDefinition.prototype.nodes;\n    /**\n     * aggregated NodeFlags for all nodes *\n     * @type {?}\n     */\n    ViewDefinition.prototype.nodeFlags;\n    /** @type {?} */\n    ViewDefinition.prototype.rootNodeFlags;\n    /** @type {?} */\n    ViewDefinition.prototype.lastRenderRootNode;\n    /** @type {?} */\n    ViewDefinition.prototype.bindingCount;\n    /** @type {?} */\n    ViewDefinition.prototype.outputCount;\n    /**\n     * Binary or of all query ids that are matched by one of the nodes.\n     * This includes query ids from templates as well.\n     * Used as a bloom filter.\n     * @type {?}\n     */\n    ViewDefinition.prototype.nodeMatchedQueries;\n}\n/**\n * @record\n */\nexport function ViewDefinitionFactory() { }\nfunction ViewDefinitionFactory_tsickle_Closure_declarations() {\n}\n/**\n * @record\n */\nexport function ViewUpdateFn() { }\nfunction ViewUpdateFn_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (check: NodeCheckFn, view: ViewData): void;\n    */\n}\n/**\n * @record\n */\nexport function NodeCheckFn() { }\nfunction NodeCheckFn_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n    */\n    /* TODO: handle strange member:\n    (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n       v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n    */\n}\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\nexport { ArgumentType };\n/**\n * @record\n */\nexport function ViewHandleEventFn() { }\nfunction ViewHandleEventFn_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n    */\n}\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\nexport { ViewFlags };\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\nexport function NodeDef() { }\nfunction NodeDef_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NodeDef.prototype.flags;\n    /** @type {?} */\n    NodeDef.prototype.nodeIndex;\n    /** @type {?} */\n    NodeDef.prototype.checkIndex;\n    /** @type {?} */\n    NodeDef.prototype.parent;\n    /** @type {?} */\n    NodeDef.prototype.renderParent;\n    /**\n     * this is checked against NgContentDef.index to find matched nodes\n     * @type {?}\n     */\n    NodeDef.prototype.ngContentIndex;\n    /**\n     * number of transitive children\n     * @type {?}\n     */\n    NodeDef.prototype.childCount;\n    /**\n     * aggregated NodeFlags for all transitive children (does not include self) *\n     * @type {?}\n     */\n    NodeDef.prototype.childFlags;\n    /**\n     * aggregated NodeFlags for all direct children (does not include self) *\n     * @type {?}\n     */\n    NodeDef.prototype.directChildFlags;\n    /** @type {?} */\n    NodeDef.prototype.bindingIndex;\n    /** @type {?} */\n    NodeDef.prototype.bindings;\n    /** @type {?} */\n    NodeDef.prototype.bindingFlags;\n    /** @type {?} */\n    NodeDef.prototype.outputIndex;\n    /** @type {?} */\n    NodeDef.prototype.outputs;\n    /**\n     * references that the user placed on the element\n     * @type {?}\n     */\n    NodeDef.prototype.references;\n    /**\n     * ids and value types of all queries that are matched by this node.\n     * @type {?}\n     */\n    NodeDef.prototype.matchedQueries;\n    /**\n     * Binary or of all matched query ids of this node.\n     * @type {?}\n     */\n    NodeDef.prototype.matchedQueryIds;\n    /**\n     * Binary or of all query ids that are matched by one of the children.\n     * This includes query ids from templates as well.\n     * Used as a bloom filter.\n     * @type {?}\n     */\n    NodeDef.prototype.childMatchedQueries;\n    /** @type {?} */\n    NodeDef.prototype.element;\n    /** @type {?} */\n    NodeDef.prototype.provider;\n    /** @type {?} */\n    NodeDef.prototype.text;\n    /** @type {?} */\n    NodeDef.prototype.query;\n    /** @type {?} */\n    NodeDef.prototype.ngContent;\n}\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\nexport { NodeFlags };\n/**\n * @record\n */\nexport function BindingDef() { }\nfunction BindingDef_tsickle_Closure_declarations() {\n    /** @type {?} */\n    BindingDef.prototype.flags;\n    /** @type {?} */\n    BindingDef.prototype.ns;\n    /** @type {?} */\n    BindingDef.prototype.name;\n    /** @type {?} */\n    BindingDef.prototype.nonMinifiedName;\n    /** @type {?} */\n    BindingDef.prototype.securityContext;\n    /** @type {?} */\n    BindingDef.prototype.suffix;\n}\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\nexport { BindingFlags };\n/**\n * @record\n */\nexport function OutputDef() { }\nfunction OutputDef_tsickle_Closure_declarations() {\n    /** @type {?} */\n    OutputDef.prototype.type;\n    /** @type {?} */\n    OutputDef.prototype.target;\n    /** @type {?} */\n    OutputDef.prototype.eventName;\n    /** @type {?} */\n    OutputDef.prototype.propName;\n}\n/** @enum {number} */\nvar OutputType = { ElementOutput: 0, DirectiveOutput: 1, };\nexport { OutputType };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\nexport { QueryValueType };\n/**\n * @record\n */\nexport function ElementDef() { }\nfunction ElementDef_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElementDef.prototype.name;\n    /** @type {?} */\n    ElementDef.prototype.ns;\n    /**\n     * ns, name, value\n     * @type {?}\n     */\n    ElementDef.prototype.attrs;\n    /** @type {?} */\n    ElementDef.prototype.template;\n    /** @type {?} */\n    ElementDef.prototype.componentProvider;\n    /** @type {?} */\n    ElementDef.prototype.componentRendererType;\n    /** @type {?} */\n    ElementDef.prototype.componentView;\n    /**\n     * visible public providers for DI in the view,\n     * as see from this element. This does not include private providers.\n     * @type {?}\n     */\n    ElementDef.prototype.publicProviders;\n    /**\n     * same as visiblePublicProviders, but also includes private providers\n     * that are located on this element.\n     * @type {?}\n     */\n    ElementDef.prototype.allProviders;\n    /** @type {?} */\n    ElementDef.prototype.handleEvent;\n}\n/**\n * @record\n */\nexport function ElementHandleEventFn() { }\nfunction ElementHandleEventFn_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (view: ViewData, eventName: string, event: any): boolean;\n    */\n}\n/**\n * @record\n */\nexport function ProviderDef() { }\nfunction ProviderDef_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ProviderDef.prototype.token;\n    /** @type {?} */\n    ProviderDef.prototype.value;\n    /** @type {?} */\n    ProviderDef.prototype.deps;\n}\n/**\n * @record\n */\nexport function NgModuleProviderDef() { }\nfunction NgModuleProviderDef_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgModuleProviderDef.prototype.flags;\n    /** @type {?} */\n    NgModuleProviderDef.prototype.index;\n    /** @type {?} */\n    NgModuleProviderDef.prototype.token;\n    /** @type {?} */\n    NgModuleProviderDef.prototype.value;\n    /** @type {?} */\n    NgModuleProviderDef.prototype.deps;\n}\n/**\n * @record\n */\nexport function DepDef() { }\nfunction DepDef_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DepDef.prototype.flags;\n    /** @type {?} */\n    DepDef.prototype.token;\n    /** @type {?} */\n    DepDef.prototype.tokenKey;\n}\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\nexport { DepFlags };\n/**\n * @record\n */\nexport function TextDef() { }\nfunction TextDef_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TextDef.prototype.prefix;\n}\n/**\n * @record\n */\nexport function QueryDef() { }\nfunction QueryDef_tsickle_Closure_declarations() {\n    /** @type {?} */\n    QueryDef.prototype.id;\n    /** @type {?} */\n    QueryDef.prototype.filterId;\n    /** @type {?} */\n    QueryDef.prototype.bindings;\n}\n/**\n * @record\n */\nexport function QueryBindingDef() { }\nfunction QueryBindingDef_tsickle_Closure_declarations() {\n    /** @type {?} */\n    QueryBindingDef.prototype.propName;\n    /** @type {?} */\n    QueryBindingDef.prototype.bindingType;\n}\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\nexport { QueryBindingType };\n/**\n * @record\n */\nexport function NgContentDef() { }\nfunction NgContentDef_tsickle_Closure_declarations() {\n    /**\n     * this index is checked against NodeDef.ngContentIndex to find the nodes\n     * that are matched by this ng-content.\n     * Note that a NodeDef with an ng-content can be reprojected, i.e.\n     * have a ngContentIndex on its own.\n     * @type {?}\n     */\n    NgContentDef.prototype.index;\n}\n/**\n * @record\n */\nexport function NgModuleData() { }\nfunction NgModuleData_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgModuleData.prototype._def;\n    /** @type {?} */\n    NgModuleData.prototype._parent;\n    /** @type {?} */\n    NgModuleData.prototype._providers;\n}\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ViewData() { }\nfunction ViewData_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ViewData.prototype.def;\n    /** @type {?} */\n    ViewData.prototype.root;\n    /** @type {?} */\n    ViewData.prototype.renderer;\n    /** @type {?} */\n    ViewData.prototype.parentNodeDef;\n    /** @type {?} */\n    ViewData.prototype.parent;\n    /** @type {?} */\n    ViewData.prototype.viewContainerParent;\n    /** @type {?} */\n    ViewData.prototype.component;\n    /** @type {?} */\n    ViewData.prototype.context;\n    /** @type {?} */\n    ViewData.prototype.nodes;\n    /** @type {?} */\n    ViewData.prototype.state;\n    /** @type {?} */\n    ViewData.prototype.oldValues;\n    /** @type {?} */\n    ViewData.prototype.disposables;\n    /** @type {?} */\n    ViewData.prototype.initIndex;\n}\n/** @enum {number} */\nvar ViewState = {\n    BeforeFirstCheck: 1,\n    FirstCheck: 2,\n    Attached: 4,\n    ChecksEnabled: 8,\n    IsProjectedView: 16,\n    CheckProjectedView: 32,\n    CheckProjectedViews: 64,\n    Destroyed: 128,\n    // InitState Uses 3 bits\n    InitState_Mask: 1792,\n    InitState_BeforeInit: 0,\n    InitState_CallingOnInit: 256,\n    InitState_CallingAfterContentInit: 512,\n    InitState_CallingAfterViewInit: 768,\n    InitState_AfterInit: 1024,\n    CatDetectChanges: 12,\n    CatInit: 13,\n};\nexport { ViewState };\n/**\n * @param {?} view\n * @param {?} priorInitState\n * @param {?} newInitState\n * @return {?}\n */\nexport function shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var /** @type {?} */ state = view.state;\n    var /** @type {?} */ initState = state & 1792 /* InitState_Mask */;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n/**\n * @param {?} view\n * @param {?} initState\n * @param {?} index\n * @return {?}\n */\nexport function shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * @record\n */\nexport function DisposableFn() { }\nfunction DisposableFn_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (): void;\n    */\n}\n/**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nvar /**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nNodeData = /** @class */ (function () {\n    function NodeData() {\n    }\n    return NodeData;\n}());\n/**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport { NodeData };\nfunction NodeData_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NodeData.prototype.__brand;\n}\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function TextData() { }\nfunction TextData_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TextData.prototype.renderText;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ElementData() { }\nfunction ElementData_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElementData.prototype.renderElement;\n    /** @type {?} */\n    ElementData.prototype.componentView;\n    /** @type {?} */\n    ElementData.prototype.viewContainer;\n    /** @type {?} */\n    ElementData.prototype.template;\n}\n/**\n * @record\n */\nexport function ViewContainerData() { }\nfunction ViewContainerData_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ViewContainerData.prototype._embeddedViews;\n}\n/**\n * @record\n */\nexport function TemplateData() { }\nfunction TemplateData_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TemplateData.prototype._projectedViews;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ProviderData() { }\nfunction ProviderData_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ProviderData.prototype.instance;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function PureExpressionData() { }\nfunction PureExpressionData_tsickle_Closure_declarations() {\n    /** @type {?} */\n    PureExpressionData.prototype.value;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\nexport function RootData() { }\nfunction RootData_tsickle_Closure_declarations() {\n    /** @type {?} */\n    RootData.prototype.injector;\n    /** @type {?} */\n    RootData.prototype.ngModule;\n    /** @type {?} */\n    RootData.prototype.projectableNodes;\n    /** @type {?} */\n    RootData.prototype.selectorOrNode;\n    /** @type {?} */\n    RootData.prototype.renderer;\n    /** @type {?} */\n    RootData.prototype.rendererFactory;\n    /** @type {?} */\n    RootData.prototype.errorHandler;\n    /** @type {?} */\n    RootData.prototype.sanitizer;\n}\n/**\n * @abstract\n */\nvar /**\n * @abstract\n */\nDebugContext = /** @class */ (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * @abstract\n */\nexport { DebugContext };\nfunction DebugContext_tsickle_Closure_declarations() {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.view = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.nodeIndex = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.injector = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.component = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.providerTokens = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.references = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.context = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.componentRenderElement = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.renderNode = function () { };\n    /**\n     * @abstract\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext.prototype.logError = function (console, values) { };\n}\n/** @enum {number} */\nvar CheckType = { CheckAndUpdate: 0, CheckNoChanges: 1, };\nexport { CheckType };\n/**\n * @record\n */\nexport function ProviderOverride() { }\nfunction ProviderOverride_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ProviderOverride.prototype.token;\n    /** @type {?} */\n    ProviderOverride.prototype.flags;\n    /** @type {?} */\n    ProviderOverride.prototype.value;\n    /** @type {?} */\n    ProviderOverride.prototype.deps;\n    /** @type {?} */\n    ProviderOverride.prototype.deprecatedBehavior;\n}\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nexport var /** @type {?} */ Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    overrideComponentView: /** @type {?} */ ((undefined)),\n    clearOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n//# sourceMappingURL=types.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ERROR_DEBUG_CONTEXT, ERROR_LOGGER, getDebugContext } from '../errors';\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nexport function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nexport function viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nexport function viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nexport function isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nexport function viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n//# sourceMappingURL=errors.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { WrappedValue, devModeEqual } from '../change_detection/change_detection';\nimport { SOURCE } from '../di/injector';\nimport { ViewEncapsulation } from '../metadata/view';\nimport { looseIdentical, stringify } from '../util';\nimport { expressionChangedAfterItHasBeenCheckedError } from './errors';\nimport { Services, asElementData, asTextData } from './types';\nexport var /** @type {?} */ NOOP = function () { };\nvar /** @type {?} */ _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        var /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var /** @type {?} */ oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar /** @type {?} */ UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar /** @type {?} */ EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nexport function createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar /** @type {?} */ _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nexport function resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var /** @type {?} */ isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        var /** @type {?} */ bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nexport function markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nexport function dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (/** @type {?} */ e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nexport function viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nexport function elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nexport function filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nexport function splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var /** @type {?} */ matchedQueries = {};\n    var /** @type {?} */ matchedQueryIds = 0;\n    var /** @type {?} */ references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var queryId = _a[0], valueType = _a[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @param {?=} sourceName\n * @return {?}\n */\nexport function splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar /** @type {?} */ DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nexport function resolveDefinition(factory) {\n    var /** @type {?} */ value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/** @enum {number} */\nvar RenderNodeAction = { Collect: 0, AppendChild: 1, InsertBefore: 2, RemoveChild: 3, };\nexport { RenderNodeAction };\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    var /** @type {?} */ endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\nvar /** @type {?} */ NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nexport function splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nexport function calcBindingFlags(bindings) {\n    var /** @type {?} */ flags = 0;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nexport function interpolate(valueCount, constAndInterp) {\n    var /** @type {?} */ result = '';\n    for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nexport function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nexport var /** @type {?} */ EMPTY_ARRAY = [];\nexport var /** @type {?} */ EMPTY_MAP = {};\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { SecurityContext } from '../security';\nimport { asElementData } from './types';\nimport { NOOP, calcBindingFlags, checkAndUpdateBinding, dispatchEvent, elementEventFullName, getParentRenderElement, resolveDefinition, resolveRendererType2, splitMatchedQueriesDsl, splitNamespace } from './util';\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nexport function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nexport function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ ns = /** @type {?} */ ((null));\n    var /** @type {?} */ name = /** @type {?} */ ((null));\n    if (namespaceAndName) {\n        _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var /** @type {?} */ bindingDefs = new Array(bindings.length);\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var _c = bindings[i], bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = splitNamespace(namespaceAndName_1), ns_1 = _d[0], name_1 = _d[1];\n        var /** @type {?} */ securityContext = /** @type {?} */ ((undefined));\n        var /** @type {?} */ suffix = /** @type {?} */ ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var /** @type {?} */ outputDefs = new Array(outputs.length);\n    for (var /** @type {?} */ i = 0; i < outputs.length; i++) {\n        var _e = outputs[i], target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var /** @type {?} */ attrs = /** @type {?} */ (fixedAttrs.map(function (_a) {\n        var namespaceAndName = _a[0], value = _a[1];\n        var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = /** @type {?} */ ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nexport function listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    var /** @type {?} */ renderNode = elData.renderElement;\n    var /** @type {?} */ name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode, name);\n    }\n    else {\n        renderer.removeClass(renderNode, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode, name, renderValue);\n}\n//# sourceMappingURL=element.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { resolveForwardRef } from '../di/forward_ref';\nimport { Injector } from '../di/injector';\nimport { NgModuleRef } from '../linker/ng_module_factory';\nimport { stringify } from '../util';\nimport { splitDepsDsl, tokenKey } from './util';\nvar /** @type {?} */ UNDEFINED_VALUE = new Object();\nvar /** @type {?} */ InjectorRefTokenKey = tokenKey(Injector);\nvar /** @type {?} */ NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nexport function moduleDef(providers) {\n    var /** @type {?} */ providersByKey = {};\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nexport function initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            providers[i] = _createProviderInstance(data, provDef);\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey = depDef.tokenKey;\n    switch (tokenKey) {\n        case InjectorRefTokenKey:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === undefined) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance(data, providerDef);\n        }\n        return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n//# sourceMappingURL=ng_module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Services } from './types';\nimport { declaredViewContainer, renderNode, visitRootRenderNodes } from './util';\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nexport function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nexport function detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nexport function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n//# sourceMappingURL=view_attach.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Injector } from '../di/injector';\nimport { ComponentFactory, ComponentRef } from '../linker/component_factory';\nimport { ComponentFactoryBoundToModule, ComponentFactoryResolver } from '../linker/component_factory_resolver';\nimport { ElementRef } from '../linker/element_ref';\nimport { NgModuleRef } from '../linker/ng_module_factory';\nimport { TemplateRef } from '../linker/template_ref';\nimport { stringify } from '../util';\nimport { VERSION } from '../version';\nimport { callNgModuleLifecycle, initNgModule, resolveNgModuleDep } from './ng_module';\nimport { Services, asElementData, asProviderData, asTextData } from './types';\nimport { markParentViewsForCheck, resolveDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl } from './util';\nimport { attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView } from './view_attach';\nvar /** @type {?} */ EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nexport function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nexport function getComponentViewDefinitionFactory(componentFactory) {\n    return (/** @type {?} */ (componentFactory)).viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = /** @type {?} */ ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nfunction ComponentFactory__tsickle_Closure_declarations() {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ComponentFactory_.prototype.viewDefFactory;\n    /** @type {?} */\n    ComponentFactory_.prototype.selector;\n    /** @type {?} */\n    ComponentFactory_.prototype.componentType;\n    /** @type {?} */\n    ComponentFactory_.prototype._inputs;\n    /** @type {?} */\n    ComponentFactory_.prototype._outputs;\n    /** @type {?} */\n    ComponentFactory_.prototype.ngContentSelectors;\n}\nvar ComponentRef_ = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\nfunction ComponentRef__tsickle_Closure_declarations() {\n    /** @type {?} */\n    ComponentRef_.prototype.hostView;\n    /** @type {?} */\n    ComponentRef_.prototype.instance;\n    /** @type {?} */\n    ComponentRef_.prototype.changeDetectorRef;\n    /** @type {?} */\n    ComponentRef_.prototype._elDef;\n    /** @type {?} */\n    ComponentRef_.prototype._view;\n    /** @type {?} */\n    ComponentRef_.prototype._viewRef;\n    /** @type {?} */\n    ComponentRef_.prototype._component;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nexport function createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = /** @type {?} */ (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\nfunction ViewContainerRef__tsickle_Closure_declarations() {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ViewContainerRef_.prototype._embeddedViews;\n    /** @type {?} */\n    ViewContainerRef_.prototype._view;\n    /** @type {?} */\n    ViewContainerRef_.prototype._elDef;\n    /** @type {?} */\n    ViewContainerRef_.prototype._data;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\nexport { ViewRef_ };\nfunction ViewRef__tsickle_Closure_declarations() {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ViewRef_.prototype._view;\n    /** @type {?} */\n    ViewRef_.prototype._viewContainerRef;\n    /** @type {?} */\n    ViewRef_.prototype._appRef;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    tslib_1.__extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\nfunction TemplateRef__tsickle_Closure_declarations() {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    TemplateRef_.prototype._projectedViews;\n    /** @type {?} */\n    TemplateRef_.prototype._parentView;\n    /** @type {?} */\n    TemplateRef_.prototype._def;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nexport function createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\nfunction Injector__tsickle_Closure_declarations() {\n    /** @type {?} */\n    Injector_.prototype.view;\n    /** @type {?} */\n    Injector_.prototype.elDef;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function nodeValue(view, index) {\n    var /** @type {?} */ def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n        return /** @type {?} */ ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\nfunction RendererAdapter_tsickle_Closure_declarations() {\n    /** @type {?} */\n    RendererAdapter.prototype.delegate;\n}\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nexport function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: 0 /* None */ }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\nfunction NgModuleRef__tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgModuleRef_.prototype._destroyListeners;\n    /** @type {?} */\n    NgModuleRef_.prototype._destroyed;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    NgModuleRef_.prototype._providers;\n    /** @type {?} */\n    NgModuleRef_.prototype.injector;\n    /** @type {?} */\n    NgModuleRef_.prototype._moduleType;\n    /** @type {?} */\n    NgModuleRef_.prototype._parent;\n    /** @type {?} */\n    NgModuleRef_.prototype._bootstrapComponents;\n    /** @type {?} */\n    NgModuleRef_.prototype._def;\n}\n//# sourceMappingURL=refs.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectorRef, SimpleChange, WrappedValue } from '../change_detection/change_detection';\nimport { Injector, resolveForwardRef } from '../di';\nimport { ElementRef } from '../linker/element_ref';\nimport { TemplateRef } from '../linker/template_ref';\nimport { ViewContainerRef } from '../linker/view_container_ref';\nimport { Renderer as RendererV1, Renderer2 } from '../render/api';\nimport { stringify } from '../util';\nimport { createChangeDetectorRef, createInjector, createRendererV1 } from './refs';\nimport { Services, asElementData, asProviderData, shouldCallLifecycleInitHook } from './types';\nimport { calcBindingFlags, checkBinding, dispatchEvent, isComponentView, splitDepsDsl, splitMatchedQueriesDsl, tokenKey, viewParentEl } from './util';\nvar /** @type {?} */ RendererV1TokenKey = tokenKey(RendererV1);\nvar /** @type {?} */ Renderer2TokenKey = tokenKey(Renderer2);\nvar /** @type {?} */ ElementRefTokenKey = tokenKey(ElementRef);\nvar /** @type {?} */ ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar /** @type {?} */ TemplateRefTokenKey = tokenKey(TemplateRef);\nvar /** @type {?} */ ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar /** @type {?} */ InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nexport function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var /** @type {?} */ bindings = [];\n    if (props) {\n        for (var /** @type {?} */ prop in props) {\n            var _a = props[prop], bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var /** @type {?} */ outputDefs = [];\n    if (outputs) {\n        for (var /** @type {?} */ propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nexport function pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nexport function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nexport var /** @type {?} */ NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey = depDef.tokenKey;\n    if (tokenKey === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(view, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(view, providerDef_1) };\n                            view.nodes[providerDef_1.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = /** @type {?} */ ((viewParentEl(view)));\n        view = /** @type {?} */ ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    var /** @type {?} */ initIndex = 0;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var /** @type {?} */ providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var /** @type {?} */ provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n//# sourceMappingURL=provider.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef } from '../linker/element_ref';\nimport { QueryList } from '../linker/query_list';\nimport { asElementData, asProviderData, asQueryList } from './types';\nimport { declaredViewContainer, filterQueryId, isEmbeddedView } from './util';\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nexport function queryDef(flags, id, bindings) {\n    var /** @type {?} */ bindingDefs = [];\n    for (var /** @type {?} */ propName in bindings) {\n        var /** @type {?} */ bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nexport function createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nexport function checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nexport function getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n//# sourceMappingURL=query.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { asTextData } from './types';\nimport { checkAndUpdateBinding, getParentRenderElement } from './util';\n/**\n * @param {?} checkIndex\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nexport function textDef(checkIndex, ngContentIndex, staticText) {\n    var /** @type {?} */ bindings = new Array(staticText.length - 1);\n    for (var /** @type {?} */ i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode);\n    }\n    return { renderText: renderNode };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n//# sourceMappingURL=text.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement, listenToElementOutputs } from './element';\nimport { expressionChangedAfterItHasBeenCheckedError } from './errors';\nimport { appendNgContent } from './ng_content';\nimport { callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance } from './provider';\nimport { checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression } from './pure_expression';\nimport { checkAndUpdateQuery, createQuery } from './query';\nimport { createTemplateData, createViewContainerData } from './refs';\nimport { checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText } from './text';\nimport { Services, asElementData, asQueryList, asTextData, shiftInitState } from './types';\nimport { NOOP, checkBindingNoChanges, isComponentView, markParentViewsForCheckProjectedViews, resolveDefinition, tokenKey } from './util';\nimport { detachProjectedView } from './view_attach';\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nexport function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var /** @type {?} */ viewBindingCount = 0;\n    var /** @type {?} */ viewDisposableCount = 0;\n    var /** @type {?} */ viewNodeFlags = 0;\n    var /** @type {?} */ viewRootNodeFlags = 0;\n    var /** @type {?} */ viewMatchedQueries = 0;\n    var /** @type {?} */ currentParent = null;\n    var /** @type {?} */ currentRenderParent = null;\n    var /** @type {?} */ currentElementHasPublicProviders = false;\n    var /** @type {?} */ currentElementHasPrivateProviders = false;\n    var /** @type {?} */ lastRenderRootNode = null;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var /** @type {?} */ elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? /** @type {?} */ ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).publicProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders); /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).allProviders = /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders;\n            }\n            var /** @type {?} */ isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var /** @type {?} */ isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((/** @type {?} */ ((currentParent)).element)).allProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var /** @type {?} */ newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var /** @type {?} */ handleEvent = function (view, nodeIndex, eventName, event) { return ((/** @type {?} */ ((nodes[nodeIndex].element)).handleEvent))(view, eventName, event); };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && /** @type {?} */ ((node.element)).name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    var /** @type {?} */ template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var /** @type {?} */ parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nexport function createEmbeddedView(parent, anchorDef, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nexport function createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nexport function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var /** @type {?} */ callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n//# sourceMappingURL=view.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getParentRenderElement, visitProjectedRenderNodes } from './util';\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nexport function ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n//# sourceMappingURL=ng_content.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { asPureExpressionData } from './types';\nimport { calcBindingFlags, checkAndUpdateBinding } from './util';\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nexport function purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nexport function pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\n/**\n * @param {?} checkIndex\n * @param {?} propToIndex\n * @return {?}\n */\nexport function pureObjectDef(checkIndex, propToIndex) {\n    var /** @type {?} */ keys = Object.keys(propToIndex);\n    var /** @type {?} */ nbKeys = keys.length;\n    var /** @type {?} */ propertyNames = new Array(nbKeys);\n    for (var /** @type {?} */ i = 0; i < nbKeys; i++) {\n        var /** @type {?} */ key = keys[i];\n        var /** @type {?} */ index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} checkIndex\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var /** @type {?} */ bindings = new Array(propertyNames.length);\n    for (var /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n        var /** @type {?} */ prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n//# sourceMappingURL=pure_expression.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isDevMode } from '../application_ref';\nimport { DebugElement, DebugNode, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex } from '../debug/debug_node';\nimport { ErrorHandler } from '../error_handler';\nimport { RendererFactory2 } from '../render/api';\nimport { Sanitizer } from '../security';\nimport { isViewDebugError, viewDestroyedError, viewWrappedDebugError } from './errors';\nimport { resolveDep } from './provider';\nimport { dirtyParentQueries, getQueryValue } from './query';\nimport { createInjector, createNgModuleRef, getComponentViewDefinitionFactory } from './refs';\nimport { Services, asElementData, asPureExpressionData } from './types';\nimport { NOOP, isComponentView, renderNode, resolveDefinition, splitDepsDsl, viewParentEl } from './util';\nimport { checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createComponentView, createEmbeddedView, createRootView, destroyView } from './view';\nvar /** @type {?} */ initialized = false;\n/**\n * @return {?}\n */\nexport function initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ overrideComponentView = viewDefOverrides.get(/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentProvider)).provider)).token);\n    if (overrideComponentView) {\n        viewDef = overrideComponentView;\n    }\n    else {\n        viewDef = applyProviderOverridesToView(viewDef);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar /** @type {?} */ providerOverrides = new Map();\nvar /** @type {?} */ viewDefOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @param {?} comp\n * @param {?} compFactory\n * @return {?}\n */\nfunction debugOverrideComponentView(comp, compFactory) {\n    var /** @type {?} */ hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((hostViewDef.nodes[0].element)).componentView)));\n    viewDefOverrides.set(comp, compViewDef);\n}\n/**\n * @return {?}\n */\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    viewDefOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var /** @type {?} */ provider = /** @type {?} */ ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        var /** @type {?} */ hasOverrides = false;\n        var /** @type {?} */ hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var /** @type {?} */ override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar /** @type {?} */ _currentAction;\nvar /** @type {?} */ _currentView;\nvar /** @type {?} */ _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = /** @type {?} */ ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (/** @type {?} */ e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\nfunction DebugContext__tsickle_Closure_declarations() {\n    /** @type {?} */\n    DebugContext_.prototype.nodeDef;\n    /** @type {?} */\n    DebugContext_.prototype.elView;\n    /** @type {?} */\n    DebugContext_.prototype.elDef;\n    /** @type {?} */\n    DebugContext_.prototype.view;\n    /** @type {?} */\n    DebugContext_.prototype.nodeIndex;\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nexport function getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nfunction DebugRendererFactory2_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DebugRendererFactory2.prototype.delegate;\n}\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        this.data = this.delegate.data;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\nfunction DebugRenderer2_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DebugRenderer2.prototype.data;\n    /** @type {?} */\n    DebugRenderer2.prototype.delegate;\n}\n//# sourceMappingURL=services.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Injector } from '../di/injector';\nimport { NgModuleFactory } from '../linker/ng_module_factory';\nimport { initServicesIfNeeded } from './services';\nimport { Services } from './types';\nimport { resolveDefinition } from './util';\n/**\n * @param {?} override\n * @return {?}\n */\nexport function overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @param {?} comp\n * @param {?} componentFactory\n * @return {?}\n */\nexport function overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\n/**\n * @return {?}\n */\nexport function clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nexport function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    tslib_1.__extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\nfunction NgModuleFactory__tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgModuleFactory_.prototype.moduleType;\n    /** @type {?} */\n    NgModuleFactory_.prototype._bootstrapComponents;\n    /** @type {?} */\n    NgModuleFactory_.prototype._ngModuleDefFactory;\n}\n//# sourceMappingURL=entrypoint.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n/**\n * Stringifies values such that strings are wrapped in explicit quotation marks and\n * other types are stringified normally. Used in error messages (e.g. assertThrow)\n * to make it clear that certain values are of the string type when comparing.\n *\n * e.g. `expected \"3\" to be 3` is easier to understand than `expected 3 to be 3`.\n *\n * @param {?} value The value to be stringified\n * @return {?} The stringified value\n */\nfunction stringifyValueForError(value) {\n    return typeof value === 'string' ? \"\\\"\" + value + \"\\\"\" : '' + value;\n}\n/**\n * @param {?} actual\n * @param {?} name\n * @return {?}\n */\nexport function assertNumber(actual, name) {\n    (typeof actual != 'number') && assertThrow(actual, 'number', name, 'typeofr ==');\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} name\n * @param {?=} serializer\n * @return {?}\n */\nexport function assertEqual(actual, expected, name, serializer) {\n    (actual != expected) && assertThrow(actual, expected, name, '==', serializer);\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} name\n * @return {?}\n */\nexport function assertLessThan(actual, expected, name) {\n    (actual < expected) && assertThrow(actual, expected, name, '>');\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} name\n * @return {?}\n */\nexport function assertNotNull(actual, name) {\n    assertNotEqual(actual, null, name);\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} name\n * @return {?}\n */\nexport function assertNotEqual(actual, expected, name) {\n    (actual == expected) && assertThrow(actual, expected, name, '!=');\n}\n/**\n * Throws an error with a message constructed from the arguments.\n *\n * @template T\n * @param {?} actual The actual value (e.g. 3)\n * @param {?} expected The expected value (e.g. 5)\n * @param {?} name The name of the value being checked (e.g. attrs.length)\n * @param {?} operator The comparison operator (e.g. <, >, ==)\n * @param {?=} serializer Function that maps a value to its display value\n * @return {?}\n */\nexport function assertThrow(actual, expected, name, operator, serializer) {\n    if (serializer === void 0) { serializer = stringifyValueForError; }\n    throw new Error(\"ASSERT: expected \" + name + \" \" + operator + \" \" + serializer(expected) + \" but was \" + serializer(actual) + \"!\");\n}\n//# sourceMappingURL=assert.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nif (typeof ngDevMode == 'undefined') {\n    if (typeof window != 'undefined')\n        (/** @type {?} */ (window)).ngDevMode = true;\n    if (typeof self != 'undefined')\n        (/** @type {?} */ (self)).ngDevMode = true;\n    if (typeof global != 'undefined')\n        (/** @type {?} */ (global)).ngDevMode = true;\n}\nexport var /** @type {?} */ _ngDevMode = true;\n//# sourceMappingURL=ng_dev_mode.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { assertNotNull } from './assert';\nimport { getOrCreateContainerRef, getOrCreateElementRef, getOrCreateNodeInjectorForNode, getOrCreateTemplateRef } from './di';\nimport { assertNodeOfPossibleTypes } from './node_assert';\n/**\n * A predicate which determines if a given element/directive should be included in the query\n * @record\n */\nexport function QueryPredicate() { }\nfunction QueryPredicate_tsickle_Closure_declarations() {\n    /**\n     * Next predicate\n     * @type {?}\n     */\n    QueryPredicate.prototype.next;\n    /**\n     * Destination to which the value should be added.\n     * @type {?}\n     */\n    QueryPredicate.prototype.list;\n    /**\n     * If looking for directives than it contains the directive type.\n     * @type {?}\n     */\n    QueryPredicate.prototype.type;\n    /**\n     * If selector then contains local names to query for.\n     * @type {?}\n     */\n    QueryPredicate.prototype.selector;\n    /**\n     * Indicates which token should be read from DI for this query.\n     * @type {?}\n     */\n    QueryPredicate.prototype.read;\n    /**\n     * Values which have been located.\n     *\n     * this is what builds up the `QueryList._valuesTree`.\n     * @type {?}\n     */\n    QueryPredicate.prototype.values;\n}\nvar QueryState_ = /** @class */ (function () {\n    function QueryState_(deep) {\n        this.shallow = null;\n        this.deep = null;\n        this.deep = deep == null ? null : deep;\n    }\n    /**\n     * @template T\n     * @param {?} queryList\n     * @param {?} predicate\n     * @param {?=} descend\n     * @param {?=} read\n     * @return {?}\n     */\n    QueryState_.prototype.track = /**\n     * @template T\n     * @param {?} queryList\n     * @param {?} predicate\n     * @param {?=} descend\n     * @param {?=} read\n     * @return {?}\n     */\n    function (queryList, predicate, descend, read) {\n        // TODO(misko): This is not right. In case of inherited state, a calling track will incorrectly\n        // mutate parent.\n        if (descend) {\n            this.deep = createPredicate(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow =\n                createPredicate(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    QueryState_.prototype.child = /**\n     * @return {?}\n     */\n    function () {\n        if (this.deep === null) {\n            // if we don't have any deep queries than no need to track anything more.\n            return null;\n        }\n        if (this.shallow === null) {\n            // DeepQuery: We can reuse the current state if the child state would be same as current\n            // state.\n            return this;\n        }\n        else {\n            // We need to create new state\n            return new QueryState_(this.deep);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    QueryState_.prototype.addNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        add(this.shallow, node);\n        add(this.deep, node);\n    };\n    /**\n     * @param {?} container\n     * @param {?} view\n     * @param {?} index\n     * @return {?}\n     */\n    QueryState_.prototype.insertView = /**\n     * @param {?} container\n     * @param {?} view\n     * @param {?} index\n     * @return {?}\n     */\n    function (container, view, index) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @param {?} container\n     * @param {?} view\n     * @param {?} index\n     * @return {?}\n     */\n    QueryState_.prototype.removeView = /**\n     * @param {?} container\n     * @param {?} view\n     * @param {?} index\n     * @return {?}\n     */\n    function (container, view, index) {\n        throw new Error('Method not implemented.');\n    };\n    return QueryState_;\n}());\nexport { QueryState_ };\nfunction QueryState__tsickle_Closure_declarations() {\n    /** @type {?} */\n    QueryState_.prototype.shallow;\n    /** @type {?} */\n    QueryState_.prototype.deep;\n}\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param {?} staticData static data of a node to check\n * @param {?} selector selector to match\n * @return {?} directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(staticData, selector) {\n    var /** @type {?} */ localNames = staticData.localNames;\n    if (localNames) {\n        for (var /** @type {?} */ i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return /** @type {?} */ (localNames[i + 1]);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param {?} node Node on which directives are present.\n * @param {?} type Type of a directive to look for.\n * @return {?} Index of a found directive or null when none found.\n */\nfunction geIdxOfMatchingDirective(node, type) {\n    var /** @type {?} */ ngStaticData = node.view.ngStaticData;\n    var /** @type {?} */ flags = node.flags;\n    for (var /** @type {?} */ i = flags >> 12 /* INDX_SHIFT */, /** @type {?} */\n    ii = i + ((flags & 4092 /* SIZE_MASK */) >> 2 /* SIZE_SHIFT */); i < ii; i++) {\n        var /** @type {?} */ def = /** @type {?} */ (ngStaticData[i]);\n        if (def.diPublic && def.type === type) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} nodeInjector\n * @param {?} node\n * @return {?}\n */\nfunction readDefaultInjectable(nodeInjector, node) {\n    ngDevMode && assertNodeOfPossibleTypes(node, 0 /* Container */, 3 /* Element */);\n    if ((node.flags & 3 /* TYPE_MASK */) === 3 /* Element */) {\n        return getOrCreateElementRef(nodeInjector);\n    }\n    else if ((node.flags & 3 /* TYPE_MASK */) === 0 /* Container */) {\n        return getOrCreateTemplateRef(nodeInjector);\n    }\n}\n/**\n * @param {?} nodeInjector\n * @param {?} node\n * @param {?} read\n * @return {?}\n */\nfunction readFromNodeInjector(nodeInjector, node, read) {\n    if (read === 0 /* ElementRef */) {\n        return getOrCreateElementRef(nodeInjector);\n    }\n    else if (read === 1 /* ViewContainerRef */) {\n        return getOrCreateContainerRef(nodeInjector);\n    }\n    else if (read === 2 /* TemplateRef */) {\n        return getOrCreateTemplateRef(nodeInjector);\n    }\n    else {\n        var /** @type {?} */ matchingIdx = geIdxOfMatchingDirective(node, read);\n        if (matchingIdx !== null) {\n            return node.view.data[matchingIdx];\n        }\n    }\n    return null;\n}\n/**\n * @param {?} predicate\n * @param {?} node\n * @return {?}\n */\nfunction add(predicate, node) {\n    var /** @type {?} */ nodeInjector = getOrCreateNodeInjectorForNode(/** @type {?} */ (node));\n    while (predicate) {\n        var /** @type {?} */ type = predicate.type;\n        if (type) {\n            var /** @type {?} */ directiveIdx = geIdxOfMatchingDirective(node, type);\n            if (directiveIdx !== null) {\n                if (predicate.read !== null) {\n                    var /** @type {?} */ requestedRead = readFromNodeInjector(nodeInjector, node, predicate.read);\n                    if (requestedRead !== null) {\n                        predicate.values.push(requestedRead);\n                    }\n                }\n                else {\n                    predicate.values.push(node.view.data[directiveIdx]);\n                }\n            }\n        }\n        else {\n            var /** @type {?} */ selector = /** @type {?} */ ((predicate.selector));\n            for (var /** @type {?} */ i = 0; i < selector.length; i++) {\n                ngDevMode && assertNotNull(node.staticData, 'node.staticData');\n                var /** @type {?} */ directiveIdx = getIdxOfMatchingSelector(/** @type {?} */ ((node.staticData)), selector[i]);\n                // is anything on a node matching a selector?\n                if (directiveIdx !== null) {\n                    if (predicate.read !== null) {\n                        var /** @type {?} */ requestedRead = readFromNodeInjector(nodeInjector, node, predicate.read);\n                        if (requestedRead !== null) {\n                            predicate.values.push(requestedRead);\n                        }\n                    }\n                    else {\n                        // is local name pointing to a directive?\n                        if (directiveIdx > -1) {\n                            predicate.values.push(node.view.data[directiveIdx]);\n                        }\n                        else {\n                            predicate.values.push(readDefaultInjectable(nodeInjector, node));\n                        }\n                    }\n                }\n            }\n        }\n        predicate = predicate.next;\n    }\n}\n/**\n * @template T\n * @param {?} previous\n * @param {?} queryList\n * @param {?} predicate\n * @param {?} read\n * @return {?}\n */\nfunction createPredicate(previous, queryList, predicate, read) {\n    var /** @type {?} */ isArray = Array.isArray(predicate);\n    var /** @type {?} */ values = /** @type {?} */ ([]);\n    if ((/** @type {?} */ ((queryList)))._valuesTree === null) {\n        (/** @type {?} */ ((queryList)))._valuesTree = values;\n    }\n    return {\n        next: previous,\n        list: queryList,\n        type: isArray ? null : /** @type {?} */ (predicate),\n        selector: isArray ? /** @type {?} */ (predicate) : null,\n        read: read,\n        values: values\n    };\n}\nvar QueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = false;\n        /**\n         * \\@internal\n         */\n        this._valuesTree = null;\n        /**\n         * \\@internal\n         */\n        this._values = null;\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            ngDevMode && assertNotNull(this._values, 'refreshed');\n            return /** @type {?} */ ((this._values)).length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            ngDevMode && assertNotNull(this._values, 'refreshed');\n            var /** @type {?} */ values = /** @type {?} */ ((this._values));\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            ngDevMode && assertNotNull(this._values, 'refreshed');\n            var /** @type {?} */ values = /** @type {?} */ ((this._values));\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    QueryList_.prototype._refresh = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(misko): needs more logic to flatten tree.\n        if (this._values === null) {\n            this._values = this._valuesTree;\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.map = /**\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.filter = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.find = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList_.prototype.reduce = /**\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.forEach = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.some = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.toArray = /**\n     * @return {?}\n     */\n    function () {\n        ngDevMode && assertNotNull(this._values, 'refreshed');\n        return /** @type {?} */ ((this._values));\n    };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { throw new Error('Method not implemented.'); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList_.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) { throw new Error('Method not implemented.'); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { throw new Error('Method not implemented.'); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.setDirty = /**\n     * @return {?}\n     */\n    function () { throw new Error('Method not implemented.'); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { throw new Error('Method not implemented.'); };\n    return QueryList_;\n}());\nfunction QueryList__tsickle_Closure_declarations() {\n    /** @type {?} */\n    QueryList_.prototype.dirty;\n    /** @type {?} */\n    QueryList_.prototype.changes;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    QueryList_.prototype._valuesTree;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    QueryList_.prototype._values;\n}\nexport var /** @type {?} */ QueryList = /** @type {?} */ (QueryList_);\n/**\n * @param {?} query\n * @return {?}\n */\nexport function queryRefresh(query) {\n    return (/** @type {?} */ ((query)))._refresh();\n}\n//# sourceMappingURL=query.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport './ng_dev_mode';\nimport { assertEqual, assertLessThan, assertNotEqual, assertNotNull } from './assert';\nimport { assertNodeType } from './node_assert';\nimport { appendChild, insertChild, insertView, processProjectedNode, removeView } from './node_manipulation';\nimport { isNodeMatchingSelector } from './node_selector_matcher';\nimport { diPublicInInjector, getOrCreateNodeInjectorForNode, getOrCreateElementRef, getOrCreateTemplateRef, getOrCreateContainerRef, getOrCreateInjectable } from './di';\nimport { QueryList, QueryState_ } from './query';\nimport { RendererStyleFlags3 } from './renderer';\nimport { isDifferent, stringify } from './util';\nexport { queryRefresh } from './query';\n/** @enum {number} */\nvar LifecycleHook = {\n    ON_INIT: 1,\n    ON_DESTROY: 2,\n    ON_CHANGES: 4,\n    AFTER_VIEW_INIT: 8,\n    AFTER_VIEW_CHECKED: 16,\n};\nexport { LifecycleHook };\n/**\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n */\nexport var /** @type {?} */ NG_HOST_SYMBOL = '__ngHostLNode__';\n/**\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n */\nvar /** @type {?} */ renderer;\nvar /** @type {?} */ rendererFactory;\n/**\n * Used to set the parent property when nodes are created.\n */\nvar /** @type {?} */ previousOrParentNode;\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n */\nvar /** @type {?} */ isParent;\n/**\n * The current template's static data (shared between all templates of a\n * given type).\n *\n * Each node's static data is stored at the same index that it's stored\n * in the data array. Any nodes that do not have static data store a null\n * value to avoid a sparse array.\n */\nvar /** @type {?} */ ngStaticData;\n/**\n * State of the current view being processed.\n */\nvar /** @type {?} */ currentView;\n// The initialization has to be after the `let`, otherwise `createViewState` can't see `let`.\ncurrentView = createViewState(/** @type {?} */ ((null)), /** @type {?} */ ((null)), []);\nvar /** @type {?} */ currentQuery;\n/**\n * This property gets set before entering a template.\n */\nvar /** @type {?} */ creationMode;\n/**\n * An array of nodes (text, element, container, etc), their bindings, and\n * any local variables that need to be stored between invocations.\n */\nvar /** @type {?} */ data;\n/**\n * Points to the next binding index to read or write to.\n */\nvar /** @type {?} */ bindingIndex;\n/**\n * When a view is destroyed, listeners need to be released\n * and onDestroy callbacks need to be called. This cleanup array\n * stores both listener data (in chunks of 4) and onDestroy data\n * (in chunks of 2), as they'll be processed at the same time.\n *\n * If it's a listener being stored:\n * 1st index is: event name to remove\n * 2nd index is: native element\n * 3rd index is: listener function\n * 4th index is: useCapture boolean\n *\n * If it's an onDestroy function:\n * 1st index is: onDestroy function\n * 2nd index is: context for function\n */\nvar /** @type {?} */ cleanup;\n/**\n * Index in the data array at which view hooks begin to be stored.\n */\nvar /** @type {?} */ viewHookStartIndex;\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param {?} newViewState New state to become active\n * @param {?} host Element to which the View is a child of\n * @return {?} the previous state;\n */\nexport function enterView(newViewState, host) {\n    var /** @type {?} */ oldViewState = currentView;\n    data = newViewState.data;\n    bindingIndex = newViewState.bindingStartIndex || 0;\n    ngStaticData = newViewState.ngStaticData;\n    creationMode = newViewState.creationMode;\n    viewHookStartIndex = newViewState.viewHookStartIndex;\n    cleanup = newViewState.cleanup;\n    renderer = newViewState.renderer;\n    if (host != null) {\n        previousOrParentNode = host;\n        isParent = true;\n    }\n    currentView = newViewState;\n    return /** @type {?} */ ((oldViewState));\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n * @param {?} newViewState\n * @return {?}\n */\nexport function leaveView(newViewState) {\n    executeViewHooks();\n    enterView(newViewState, null);\n}\n/**\n * @param {?} viewId\n * @param {?} renderer\n * @param {?} ngStaticData\n * @return {?}\n */\nexport function createViewState(viewId, renderer, ngStaticData) {\n    var /** @type {?} */ newView = {\n        parent: currentView,\n        id: viewId,\n        // -1 for component views\n        node: /** @type {?} */ ((null)),\n        // until we initialize it in createNode.\n        data: [],\n        ngStaticData: ngStaticData,\n        cleanup: null,\n        renderer: renderer,\n        child: null,\n        tail: null,\n        next: null,\n        bindingStartIndex: null,\n        creationMode: true,\n        viewHookStartIndex: null\n    };\n    return newView;\n}\n/**\n * @param {?} index\n * @param {?} type\n * @param {?} native\n * @param {?=} state\n * @return {?}\n */\nexport function createLNode(index, type, native, state) {\n    var /** @type {?} */ parent = isParent ? previousOrParentNode :\n        previousOrParentNode && /** @type {?} */ (previousOrParentNode.parent);\n    var /** @type {?} */ query = (isParent ? currentQuery : previousOrParentNode && previousOrParentNode.query) ||\n        parent && parent.query && parent.query.child();\n    var /** @type {?} */ isState = state != null;\n    var /** @type {?} */ node = {\n        flags: type,\n        native: /** @type {?} */ (native),\n        view: currentView,\n        parent: /** @type {?} */ (parent),\n        child: null,\n        next: null,\n        nodeInjector: parent ? parent.nodeInjector : null,\n        data: isState ? /** @type {?} */ (state) : null,\n        query: query,\n        staticData: null\n    };\n    if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n        // Bit of a hack to bust through the readonly because there is a circular dep between\n        // ViewState and LNode.\n        ngDevMode && assertEqual((/** @type {?} */ (state)).node, null, 'viewState.node');\n        (/** @type {?} */ ((state))).node = node;\n    }\n    if (index != null) {\n        // We are Element or Container\n        ngDevMode && assertEqual(data.length, index, 'data.length not in sequence');\n        data[index] = node;\n        // Every node adds a value to the static data array to avoid a sparse array\n        if (index >= ngStaticData.length) {\n            ngStaticData[index] = null;\n        }\n        else {\n            node.staticData = /** @type {?} */ (ngStaticData[index]);\n        }\n        // Now link ourselves into the tree.\n        if (isParent) {\n            currentQuery = null;\n            if (previousOrParentNode.view === currentView ||\n                (previousOrParentNode.flags & 3 /* TYPE_MASK */) === 2 /* View */) {\n                // We are in the same view, which means we are adding content node to the parent View.\n                ngDevMode && assertEqual(previousOrParentNode.child, null, 'previousNode.child');\n                previousOrParentNode.child = node;\n            }\n            else {\n                // We are adding component view, so we don't link parent node child to this node.\n            }\n        }\n        else if (previousOrParentNode) {\n            ngDevMode && assertEqual(previousOrParentNode.next, null, 'previousNode.next');\n            previousOrParentNode.next = node;\n        }\n    }\n    previousOrParentNode = node;\n    isParent = true;\n    return node;\n}\n/**\n * Resets the application state.\n * @return {?}\n */\nfunction resetApplicationState() {\n    isParent = false;\n    previousOrParentNode = /** @type {?} */ ((null));\n}\n/**\n *\n * @template T\n * @param {?} hostNode\n * @param {?} template Template function with the instructions.\n * @param {?} context to pass into the template.\n * @param {?} providedRendererFactory\n * @param {?} host Existing node to render into.\n * @return {?}\n */\nexport function renderTemplate(hostNode, template, context, providedRendererFactory, host) {\n    if (host == null) {\n        resetApplicationState();\n        rendererFactory = providedRendererFactory;\n        host = createLNode(null, 3 /* Element */, hostNode, createViewState(-1, providedRendererFactory.createRenderer(null, null), []));\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((host.data));\n    ngDevMode && assertNotEqual(hostView, null, 'hostView');\n    hostView.ngStaticData = getTemplateStatic(template);\n    renderComponentOrTemplate(host, hostView, context, template);\n    return host;\n}\n/**\n * @template T\n * @param {?} node\n * @param {?} viewState\n * @param {?} componentOrContext\n * @param {?=} template\n * @return {?}\n */\nexport function renderComponentOrTemplate(node, viewState, componentOrContext, template) {\n    var /** @type {?} */ oldView = enterView(viewState, node);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (template) {\n            ngStaticData = template.ngStaticData || (template.ngStaticData = /** @type {?} */ ([]));\n            template(/** @type {?} */ ((componentOrContext)), creationMode);\n        }\n        else {\n            // Element was stored at 0 and directive was stored at 1 in renderComponent\n            // so to refresh the component, r() needs to be called with (1, 0)\n            (/** @type {?} */ (componentOrContext.constructor)).ngComponentDef.r(1, 0);\n        }\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        viewState.creationMode = false;\n        leaveView(oldView);\n    }\n}\n/**\n * @return {?}\n */\nexport function getOrCreateNodeInjector() {\n    ngDevMode && assertPreviousIsParent();\n    return getOrCreateNodeInjectorForNode(/** @type {?} */ (previousOrParentNode));\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param {?} def The definition of the directive to be made public\n * @return {?}\n */\nexport function diPublic(def) {\n    diPublicInInjector(getOrCreateNodeInjector(), def);\n}\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * Usage example (in factory function):\n *\n * class SomeDirective {\n *   constructor(directive: DirectiveA) {}\n *\n *   static ngDirectiveDef = defineDirective({\n *     type: SomeDirective,\n *     factory: () => new SomeDirective(inject(DirectiveA))\n *   });\n * }\n *\n * @template T\n * @param {?} token The directive type to search for\n * @param {?=} flags Injection flags (e.g. CheckParent)\n * @return {?} The instance found\n */\nexport function inject(token, flags) {\n    return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n}\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @return {?} The ElementRef instance to use\n */\nexport function injectElementRef() {\n    return getOrCreateElementRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @template T\n * @return {?} The TemplateRef instance to use\n */\nexport function injectTemplateRef() {\n    return getOrCreateTemplateRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @return {?} The ViewContainerRef instance to use\n */\nexport function injectViewContainerRef() {\n    return getOrCreateContainerRef(getOrCreateNodeInjector());\n}\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param {?} index Index of the element in the data array\n * @param {?=} nameOrComponentDef Name of the DOM Node or `ComponentDef`.\n * @param {?=} attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param {?=} localName A name under which a given element is exported.\n *\n * Attributes are passed as an array of strings where elements with an even index hold an attribute\n * name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n * @return {?}\n */\nexport function elementStart(index, nameOrComponentDef, attrs, localName) {\n    var /** @type {?} */ node;\n    var /** @type {?} */ native;\n    if (nameOrComponentDef == null) {\n        // native node retrieval - used for exporting elements as tpl local variables (<div #foo>)\n        var /** @type {?} */ node_1 = /** @type {?} */ ((data[index]));\n        native = node_1 && (/** @type {?} */ (node_1)).native;\n    }\n    else {\n        ngDevMode && assertEqual(currentView.bindingStartIndex, null, 'bindingStartIndex');\n        var /** @type {?} */ isHostElement = typeof nameOrComponentDef !== 'string';\n        var /** @type {?} */ name_1 = isHostElement ? (/** @type {?} */ (nameOrComponentDef)).tag : /** @type {?} */ (nameOrComponentDef);\n        if (name_1 === null) {\n            // TODO: future support for nameless components.\n            throw 'for now name is required';\n        }\n        else {\n            native = renderer.createElement(name_1);\n            var /** @type {?} */ componentView = null;\n            if (isHostElement) {\n                var /** @type {?} */ ngStaticData_1 = getTemplateStatic((/** @type {?} */ (nameOrComponentDef)).template);\n                componentView = addToViewTree(createViewState(-1, rendererFactory.createRenderer(native, (/** @type {?} */ (nameOrComponentDef)).rendererType), ngStaticData_1));\n            }\n            // Only component views should be added to the view tree directly. Embedded views are\n            // accessed through their containers because they may be removed / re-added later.\n            node = createLNode(index, 3 /* Element */, native, componentView);\n            if (node.staticData == null) {\n                ngDevMode && assertDataInRange(index - 1);\n                node.staticData = ngStaticData[index] =\n                    createNodeStatic(name_1, attrs || null, null, localName || null);\n            }\n            if (attrs)\n                setUpAttributes(native, attrs);\n            appendChild(/** @type {?} */ ((node.parent)), native, currentView);\n        }\n    }\n    return native;\n}\n/**\n * Gets static data from a template function or creates a new static\n * data array if it doesn't already exist.\n *\n * @param {?} template The template from which to get static data\n * @return {?} NgStaticData\n */\nfunction getTemplateStatic(template) {\n    return template.ngStaticData || (template.ngStaticData = /** @type {?} */ ([]));\n}\n/**\n * @param {?} native\n * @param {?} attrs\n * @return {?}\n */\nfunction setUpAttributes(native, attrs) {\n    ngDevMode && assertEqual(attrs.length % 2, 0, 'attrs.length % 2');\n    var /** @type {?} */ isProceduralRenderer = (/** @type {?} */ (renderer)).setAttribute;\n    for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        isProceduralRenderer ? /** @type {?} */ (((/** @type {?} */ (renderer)).setAttribute))(native, attrs[i], attrs[i | 1]) :\n            native.setAttribute(attrs[i], attrs[i | 1]);\n    }\n}\n/**\n * @param {?} text\n * @param {?} token\n * @return {?}\n */\nexport function createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param {?} factory\n * @param {?} elementOrSelector Render element or CSS selector to locate the element.\n * @return {?}\n */\nexport function locateHostElement(factory, elementOrSelector) {\n    ngDevMode && assertDataInRange(-1);\n    rendererFactory = factory;\n    var /** @type {?} */ defaultRenderer = factory.createRenderer(null, null);\n    var /** @type {?} */ rNode = typeof elementOrSelector === 'string' ?\n        ((/** @type {?} */ (defaultRenderer)).selectRootElement ?\n            (/** @type {?} */ (defaultRenderer)).selectRootElement(elementOrSelector) : /** @type {?} */ (((/** @type {?} */ (defaultRenderer)).querySelector))(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Creates the host LNode..\n *\n * @param {?} rNode Render host element.\n * @param {?} def\n * @return {?}\n */\nexport function hostElement(rNode, def) {\n    resetApplicationState();\n    createLNode(0, 3 /* Element */, rNode, createViewState(-1, renderer, getTemplateStatic(def.template)));\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param {?} eventName Name of the event\n * @param {?} listener The function to be called when event emits\n * @param {?=} useCapture Whether or not to use capture in event listener.\n * @return {?}\n */\nexport function listener(eventName, listener, useCapture) {\n    if (useCapture === void 0) { useCapture = false; }\n    ngDevMode && assertPreviousIsParent();\n    var /** @type {?} */ node = previousOrParentNode;\n    var /** @type {?} */ native = /** @type {?} */ (node.native);\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n    if ((/** @type {?} */ (renderer)).listen) {\n        var /** @type {?} */ cleanupFn = (/** @type {?} */ (renderer)).listen(native, eventName, listener);\n        (cleanup || (cleanup = currentView.cleanup = [])).push(cleanupFn, null);\n    }\n    else {\n        native.addEventListener(eventName, listener, useCapture);\n        (cleanup || (cleanup = currentView.cleanup = [])).push(eventName, native, listener, useCapture);\n    }\n    var /** @type {?} */ staticData = /** @type {?} */ ((node.staticData));\n    if (staticData.outputs === undefined) {\n        // if we create LNodeStatic here, inputs must be undefined so we know they still need to be\n        // checked\n        staticData.outputs = null;\n        staticData = generatePropertyAliases(node.flags, staticData);\n    }\n    var /** @type {?} */ outputs = staticData.outputs;\n    var /** @type {?} */ outputData;\n    if (outputs && (outputData = outputs[eventName])) {\n        createOutput(outputData, listener);\n    }\n}\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n * @param {?} outputs\n * @param {?} listener\n * @return {?}\n */\nfunction createOutput(outputs, listener) {\n    for (var /** @type {?} */ i = 0; i < outputs.length; i += 2) {\n        ngDevMode && assertDataInRange(/** @type {?} */ (outputs[i]));\n        var /** @type {?} */ subscription = data[/** @type {?} */ (outputs[i])][outputs[i | 1]].subscribe(listener); /** @type {?} */\n        ((cleanup)).push(subscription.unsubscribe, subscription);\n    }\n}\n/**\n * Mark the end of the element.\n * @return {?}\n */\nexport function elementEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ ((previousOrParentNode.parent));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n    var /** @type {?} */ query = previousOrParentNode.query;\n    query && query.addNode(previousOrParentNode);\n}\n/**\n * Update an attribute on an Element. This is used with a `bind` instruction.\n *\n * @param {?} index The index of the element to update in the data array\n * @param {?} attrName Name of attribute. Because it is going to DOM, this is not subject to\n *        renaming as port of minification.\n * @param {?} value Value to write. This value will go through stringification.\n * @return {?}\n */\nexport function elementAttribute(index, attrName, value) {\n    if (value !== NO_CHANGE) {\n        var /** @type {?} */ element = /** @type {?} */ (data[index]);\n        if (value == null) {\n            (/** @type {?} */ (renderer)).removeAttribute ?\n                (/** @type {?} */ (renderer)).removeAttribute(element.native, attrName) :\n                element.native.removeAttribute(attrName);\n        }\n        else {\n            (/** @type {?} */ (renderer)).setAttribute ?\n                (/** @type {?} */ (renderer))\n                    .setAttribute(element.native, attrName, stringify(value)) :\n                element.native.setAttribute(attrName, stringify(value));\n        }\n    }\n}\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new \\@Inputs don't have to be re-compiled.\n *\n * @template T\n * @param {?} index The index of the element to update in the data array\n * @param {?} propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param {?} value New value to write.\n * @return {?}\n */\nexport function elementProperty(index, propName, value) {\n    if (value === NO_CHANGE)\n        return;\n    var /** @type {?} */ node = /** @type {?} */ (data[index]);\n    var /** @type {?} */ staticData = /** @type {?} */ ((node.staticData));\n    // if staticData.inputs is undefined, a listener has created output staticData, but inputs haven't\n    // yet been checked\n    if (staticData.inputs === undefined) {\n        // mark inputs as checked\n        staticData.inputs = null;\n        staticData = generatePropertyAliases(node.flags, staticData, true);\n    }\n    var /** @type {?} */ inputData = staticData.inputs;\n    var /** @type {?} */ dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(dataValue, value);\n    }\n    else {\n        var /** @type {?} */ native = node.native;\n        (/** @type {?} */ (renderer)).setProperty ?\n            (/** @type {?} */ (renderer)).setProperty(native, propName, value) :\n            native.setProperty ? native.setProperty(propName, value) :\n                (/** @type {?} */ (native))[propName] = value;\n    }\n}\n/**\n * Constructs a LNodeStatic object from the arguments.\n *\n * @param {?} tagName\n * @param {?} attrs\n * @param {?} containerStatic\n * @param {?} localName\n * @return {?} the LNodeStatic object\n */\nfunction createNodeStatic(tagName, attrs, containerStatic, localName) {\n    return {\n        tagName: tagName,\n        attrs: attrs,\n        localNames: localName ? [localName, -1] : null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        containerStatic: containerStatic\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n * @param {?} inputs\n * @param {?} value\n * @return {?}\n */\nfunction setInputsForProperty(inputs, value) {\n    for (var /** @type {?} */ i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(/** @type {?} */ (inputs[i]));\n        data[/** @type {?} */ (inputs[i])][inputs[i | 1]] = value;\n    }\n}\n/**\n * This function consolidates all the inputs or outputs defined by directives\n * on this node into one object and stores it in ngStaticData so it can\n * be shared between all templates of this type.\n *\n * @param {?} flags\n * @param {?} data\n * @param {?=} isInputData\n * @return {?}\n */\nfunction generatePropertyAliases(flags, data, isInputData) {\n    if (isInputData === void 0) { isInputData = false; }\n    var /** @type {?} */ start = flags >> 12 /* INDX_SHIFT */;\n    var /** @type {?} */ size = (flags & 4092 /* SIZE_MASK */) >> 2 /* SIZE_SHIFT */;\n    for (var /** @type {?} */ i = start, /** @type {?} */ ii = start + size; i < ii; i++) {\n        var /** @type {?} */ directiveDef = /** @type {?} */ (((ngStaticData))[i]);\n        var /** @type {?} */ propertyAliasMap = isInputData ? directiveDef.inputs : directiveDef.outputs;\n        for (var /** @type {?} */ publicName in propertyAliasMap) {\n            if (propertyAliasMap.hasOwnProperty(publicName)) {\n                var /** @type {?} */ internalName = propertyAliasMap[publicName];\n                var /** @type {?} */ staticDirData = isInputData ? (data.inputs || (data.inputs = {})) :\n                    (data.outputs || (data.outputs = {}));\n                var /** @type {?} */ hasProperty = staticDirData.hasOwnProperty(publicName);\n                hasProperty ? staticDirData[publicName].push(i, internalName) :\n                    (staticDirData[publicName] = [i, internalName]);\n            }\n        }\n    }\n    return data;\n}\n/**\n * Add or remove a class in a classList.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @template T\n * @param {?} index The index of the element to update in the data array\n * @param {?} className Name of class to toggle. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param {?} value A value indicating if a given class should be added or removed.\n * @return {?}\n */\nexport function elementClass(index, className, value) {\n    if (value !== NO_CHANGE) {\n        var /** @type {?} */ lElement = /** @type {?} */ (data[index]);\n        if (value) {\n            (/** @type {?} */ (renderer)).addClass ?\n                (/** @type {?} */ (renderer)).addClass(lElement.native, className) :\n                lElement.native.classList.add(className);\n        }\n        else {\n            (/** @type {?} */ (renderer)).removeClass ?\n                (/** @type {?} */ (renderer)).removeClass(lElement.native, className) :\n                lElement.native.classList.remove(className);\n        }\n    }\n}\n/**\n * Update a given style on an Element.\n *\n * @template T\n * @param {?} index Index of the element to change in the data array\n * @param {?} styleName Name of property. Because it is going to DOM this is not subject to\n *        renaming as part of minification.\n * @param {?} value New value to write (null to remove).\n * @param {?=} suffix Suffix to add to style's value (optional).\n * @return {?}\n */\nexport function elementStyle(index, styleName, value, suffix) {\n    if (value !== NO_CHANGE) {\n        var /** @type {?} */ lElement = /** @type {?} */ (data[index]);\n        if (value == null) {\n            (/** @type {?} */ (renderer)).removeStyle ?\n                (/** @type {?} */ (renderer))\n                    .removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                lElement.native.style.removeProperty(styleName);\n        }\n        else {\n            (/** @type {?} */ (renderer)).setStyle ?\n                (/** @type {?} */ (renderer))\n                    .setStyle(lElement.native, styleName, suffix ? stringify(value) + suffix : stringify(value), RendererStyleFlags3.DashCase) :\n                lElement.native.style.setProperty(styleName, suffix ? stringify(value) + suffix : stringify(value));\n        }\n    }\n}\n/**\n * Create static text node\n *\n * @param {?} index Index of the node in the data array.\n * @param {?=} value Value to write. This value will be stringified.\n *   If value is not provided than the actual creation of the text node is delayed.\n * @return {?}\n */\nexport function text(index, value) {\n    ngDevMode && assertEqual(currentView.bindingStartIndex, null, 'bindingStartIndex');\n    var /** @type {?} */ textNode = value != null ?\n        ((/** @type {?} */ (renderer)).createText ?\n            (/** @type {?} */ (renderer)).createText(stringify(value)) : /** @type {?} */ (((/** @type {?} */ (renderer)).createTextNode))(stringify(value))) :\n        null;\n    var /** @type {?} */ node = createLNode(index, 3 /* Element */, textNode);\n    // Text nodes are self closing.\n    isParent = false;\n    appendChild(/** @type {?} */ ((node.parent)), textNode, currentView);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper bind(1-8) method\n *\n * @template T\n * @param {?} index Index of the node in the data array.\n * @param {?} value Stringified value to write.\n * @return {?}\n */\nexport function textBinding(index, value) {\n    // TODO(misko): I don't think index < nodes.length check is needed here.\n    var /** @type {?} */ existingNode = index < data.length && /** @type {?} */ (data[index]);\n    if (existingNode && existingNode.native) {\n        // If DOM node exists and value changed, update textContent\n        value !== NO_CHANGE &&\n            ((/** @type {?} */ (renderer)).setValue ?\n                (/** @type {?} */ (renderer)).setValue(existingNode.native, stringify(value)) :\n                existingNode.native.textContent = stringify(value));\n    }\n    else if (existingNode) {\n        // Node was created but DOM node creation was delayed. Create and append now.\n        existingNode.native =\n            ((/** @type {?} */ (renderer)).createText ?\n                (/** @type {?} */ (renderer)).createText(stringify(value)) : /** @type {?} */ (((/** @type {?} */ (renderer)).createTextNode))(stringify(value)));\n        insertChild(existingNode, currentView);\n    }\n    else {\n        text(index, value);\n    }\n}\n/**\n * @template T\n * @param {?} index\n * @param {?=} directive\n * @param {?=} directiveDef\n * @param {?=} localName\n * @return {?}\n */\nexport function directive(index, directive, directiveDef, localName) {\n    var /** @type {?} */ instance;\n    if (directive == null) {\n        // return existing\n        ngDevMode && assertDataInRange(index);\n        instance = data[index];\n    }\n    else {\n        ngDevMode && assertEqual(currentView.bindingStartIndex, null, 'bindingStartIndex');\n        ngDevMode && assertPreviousIsParent();\n        var /** @type {?} */ flags = /** @type {?} */ ((previousOrParentNode)).flags;\n        var /** @type {?} */ size = flags & 4092 /* SIZE_MASK */;\n        if (size === 0) {\n            flags =\n                (index << 12 /* INDX_SHIFT */) | 4 /* SIZE_SKIP */ | flags & 3 /* TYPE_MASK */;\n        }\n        else {\n            flags += 4 /* SIZE_SKIP */;\n        } /** @type {?} */\n        ((previousOrParentNode)).flags = flags;\n        ngDevMode && assertDataInRange(index - 1);\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        data[index] = instance = directive;\n        if (index >= ngStaticData.length) {\n            ngStaticData[index] = /** @type {?} */ ((directiveDef));\n            if (localName) {\n                ngDevMode &&\n                    assertNotNull(previousOrParentNode.staticData, 'previousOrParentNode.staticData');\n                var /** @type {?} */ nodeStaticData = /** @type {?} */ ((/** @type {?} */ ((previousOrParentNode)).staticData));\n                (nodeStaticData.localNames || (nodeStaticData.localNames = [])).push(localName, index);\n            }\n        }\n        var /** @type {?} */ diPublic_1 = /** @type {?} */ ((directiveDef)).diPublic;\n        if (diPublic_1) {\n            diPublic_1(/** @type {?} */ ((directiveDef)));\n        }\n        var /** @type {?} */ staticData = /** @type {?} */ ((previousOrParentNode.staticData));\n        if (staticData && staticData.attrs) {\n            setInputsFromAttrs(instance, /** @type {?} */ ((directiveDef)).inputs, staticData);\n        }\n    }\n    return instance;\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @template T\n * @param {?} instance Instance of the directive on which to set the initial inputs\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} staticData The static data for this node\n * @return {?}\n */\nfunction setInputsFromAttrs(instance, inputs, staticData) {\n    var /** @type {?} */ directiveIndex = ((previousOrParentNode.flags & 4092 /* SIZE_MASK */) >> 2 /* SIZE_SHIFT */) - 1;\n    var /** @type {?} */ initialInputData = /** @type {?} */ (staticData.initialInputs);\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, staticData);\n    }\n    var /** @type {?} */ initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var /** @type {?} */ i = 0; i < initialInputs.length; i += 2) {\n            (/** @type {?} */ (instance))[initialInputs[i]] = initialInputs[i | 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an \\@Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` \\@Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param {?} directiveIndex Index to store the initial input data\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} staticData The static data on this node\n * @return {?}\n */\nfunction generateInitialInputs(directiveIndex, inputs, staticData) {\n    var /** @type {?} */ initialInputData = staticData.initialInputs || (staticData.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    var /** @type {?} */ attrs = /** @type {?} */ ((staticData.attrs));\n    for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        var /** @type {?} */ attrName = attrs[i];\n        var /** @type {?} */ minifiedInputName = inputs[attrName];\n        if (minifiedInputName !== undefined) {\n            var /** @type {?} */ inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, attrs[i | 1]);\n        }\n    }\n    return initialInputData;\n}\n/**\n * @param {?} lifecycle\n * @param {?=} self\n * @param {?=} method\n * @return {?}\n */\nexport function lifecycle(lifecycle, self, method) {\n    if (lifecycle === 1 /* ON_INIT */) {\n        return creationMode;\n    }\n    else if (lifecycle === 2 /* ON_DESTROY */) {\n        (cleanup || (currentView.cleanup = cleanup = [])).push(method, self);\n    }\n    else if (creationMode && (lifecycle === 8 /* AFTER_VIEW_INIT */ ||\n        lifecycle === 16 /* AFTER_VIEW_CHECKED */)) {\n        if (viewHookStartIndex == null) {\n            currentView.viewHookStartIndex = viewHookStartIndex = data.length;\n        }\n        data.push(lifecycle, method, self);\n    }\n    return false;\n}\n/**\n * Iterates over view hook functions and calls them.\n * @return {?}\n */\nexport function executeViewHooks() {\n    if (viewHookStartIndex == null)\n        return;\n    // Instead of using splice to remove init hooks after their first run (expensive), we\n    // shift over the AFTER_CHECKED hooks as we call them and truncate once at the end.\n    var /** @type {?} */ checkIndex = /** @type {?} */ (viewHookStartIndex);\n    var /** @type {?} */ writeIndex = checkIndex;\n    while (checkIndex < data.length) {\n        // Call lifecycle hook with its context\n        data[checkIndex + 1].call(data[checkIndex + 2]);\n        if (data[checkIndex] === 16 /* AFTER_VIEW_CHECKED */) {\n            // We know if the writeIndex falls behind that there is an init that needs to\n            // be overwritten.\n            if (writeIndex < checkIndex) {\n                data[writeIndex] = data[checkIndex];\n                data[writeIndex + 1] = data[checkIndex + 1];\n                data[writeIndex + 2] = data[checkIndex + 2];\n            }\n            writeIndex += 3;\n        }\n        checkIndex += 3;\n    }\n    // Truncate once at the writeIndex\n    data.length = writeIndex;\n}\n/**\n * Creates an LContainer.\n *\n * Only `LView`s can go into `LContainer`.\n *\n * @param {?} index The index of the container in the data array\n * @param {?=} template Optional inline template\n * @param {?=} tagName The name of the container element, if applicable\n * @param {?=} attrs The attrs attached to the container, if applicable\n * @param {?=} localName\n * @return {?}\n */\nexport function containerStart(index, template, tagName, attrs, localName) {\n    ngDevMode && assertEqual(currentView.bindingStartIndex, null, 'bindingStartIndex');\n    // If the direct parent of the container is a view, its views (including its comment)\n    // will need to be added through insertView() when its parent view is being inserted.\n    // For now, it is marked \"headless\" so we know to append its views later.\n    var /** @type {?} */ comment = renderer.createComment(ngDevMode ? 'container' : '');\n    var /** @type {?} */ renderParent = null;\n    var /** @type {?} */ currentParent = isParent ? previousOrParentNode : /** @type {?} */ ((previousOrParentNode.parent));\n    ngDevMode && assertNotEqual(currentParent, null, 'currentParent');\n    if (appendChild(currentParent, comment, currentView)) {\n        // we are adding to an Element which is either:\n        // - Not a component (will not be re-projected, just added)\n        // - View of the Component\n        renderParent = /** @type {?} */ (currentParent);\n    }\n    var /** @type {?} */ node = createLNode(index, 0 /* Container */, comment, /** @type {?} */ ({\n        views: [],\n        nextIndex: 0, renderParent: renderParent,\n        template: template == null ? null : template,\n        next: null,\n        parent: currentView\n    }));\n    if (node.staticData == null) {\n        node.staticData = ngStaticData[index] =\n            createNodeStatic(tagName || null, attrs || null, [], localName || null);\n    }\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(node.data);\n}\n/**\n * @return {?}\n */\nexport function containerEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ ((previousOrParentNode.parent));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var /** @type {?} */ query = previousOrParentNode.query;\n    query && query.addNode(previousOrParentNode);\n}\n/**\n * Sets a container up to receive views.\n *\n * @param {?} index The index of the container in the data array\n * @return {?}\n */\nexport function containerRefreshStart(index) {\n    ngDevMode && assertDataInRange(index);\n    previousOrParentNode = /** @type {?} */ (data[index]);\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    isParent = true;\n    (/** @type {?} */ (previousOrParentNode)).data.nextIndex = 0;\n}\n/**\n * Marks the end of the LContainer.\n *\n * Marking the end of ViewContainer is the time when to child Views get inserted or removed.\n * @return {?}\n */\nexport function containerRefreshEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ ((previousOrParentNode.parent));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var /** @type {?} */ container = /** @type {?} */ (previousOrParentNode);\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var /** @type {?} */ nextIndex = container.data.nextIndex;\n    while (nextIndex < container.data.views.length) {\n        // remove extra view.\n        removeView(container, nextIndex);\n    }\n}\n/**\n * Creates an LView.\n *\n * @param {?} viewBlockId The ID of this view\n * @return {?} Whether or not this view is in creation mode\n */\nexport function viewStart(viewBlockId) {\n    var /** @type {?} */ container = /** @type {?} */ ((isParent ? previousOrParentNode : /** @type {?} */ ((previousOrParentNode.parent))));\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var /** @type {?} */ containerState = container.data;\n    var /** @type {?} */ views = containerState.views;\n    var /** @type {?} */ existingView = !creationMode && containerState.nextIndex < views.length && views[containerState.nextIndex];\n    var /** @type {?} */ viewUpdateMode = existingView && viewBlockId === (/** @type {?} */ (existingView)).data.id;\n    if (viewUpdateMode) {\n        previousOrParentNode = views[containerState.nextIndex++];\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        isParent = true;\n        enterView((/** @type {?} */ (existingView)).data, /** @type {?} */ (previousOrParentNode));\n    }\n    else {\n        // When we create a new View, we always reset the state of the instructions.\n        var /** @type {?} */ newViewState = createViewState(viewBlockId, renderer, initViewStaticData(viewBlockId, container));\n        enterView(newViewState, createLNode(null, 2 /* View */, null, newViewState));\n        containerState.nextIndex++;\n    }\n    return !viewUpdateMode;\n}\n/**\n * Initialize the static data for the active view.\n *\n * Each embedded view needs to set the global ngStaticData variable to the static data for\n * that view. Otherwise, the view's static data for a particular node would overwrite\n * the staticdata for a node in the view above it with the same index (since it's in the\n * same template).\n *\n * @param {?} viewIndex The index of the view's static data in containerStatic\n * @param {?} parent The parent container in which to look for the view's static data\n * @return {?} NgStaticData\n */\nfunction initViewStaticData(viewIndex, parent) {\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    var /** @type {?} */ containerStatic = (/** @type {?} */ (((parent)).staticData)).containerStatic;\n    if (viewIndex >= containerStatic.length || containerStatic[viewIndex] == null) {\n        containerStatic[viewIndex] = [];\n    }\n    return containerStatic[viewIndex];\n}\n/**\n * Marks the end of the LView.\n * @return {?}\n */\nexport function viewEnd() {\n    isParent = false;\n    var /** @type {?} */ viewNode = previousOrParentNode = /** @type {?} */ (currentView.node);\n    var /** @type {?} */ container = /** @type {?} */ (previousOrParentNode.parent);\n    ngDevMode && assertNodeType(viewNode, 2 /* View */);\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var /** @type {?} */ containerState = container.data;\n    var /** @type {?} */ previousView = containerState.nextIndex <= containerState.views.length ? /** @type {?} */ (containerState.views[containerState.nextIndex - 1]) :\n        null;\n    var /** @type {?} */ viewIdChanged = previousView == null ? true : previousView.data.id !== viewNode.data.id;\n    if (viewIdChanged) {\n        insertView(container, viewNode, containerState.nextIndex - 1);\n        currentView.creationMode = false;\n    }\n    leaveView(/** @type {?} */ ((/** @type {?} */ ((currentView)).parent)));\n    ngDevMode && assertEqual(isParent, false, 'isParent');\n    ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n}\n/**\n * Refreshes the component view.\n *\n * In other words, enters the component's view and processes it to update bindings, queries, etc.\n *\n * @param directiveIndex\n * @param elementIndex\n * @param template\n */\nexport var /** @type {?} */ componentRefresh = function (directiveIndex, elementIndex, template) {\n    ngDevMode && assertDataInRange(elementIndex);\n    var /** @type {?} */ element = /** @type {?} */ (((data))[elementIndex]);\n    ngDevMode && assertNodeType(element, 3 /* Element */);\n    ngDevMode && assertNotEqual(element.data, null, 'isComponent');\n    ngDevMode && assertDataInRange(directiveIndex);\n    var /** @type {?} */ hostView = /** @type {?} */ ((element.data));\n    ngDevMode && assertNotEqual(hostView, null, 'hostView');\n    var /** @type {?} */ directive = data[directiveIndex];\n    var /** @type {?} */ oldView = enterView(hostView, element);\n    try {\n        template(directive, creationMode);\n    }\n    finally {\n        hostView.creationMode = false;\n        leaveView(oldView);\n    }\n};\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * @param {?=} selectors\n * @return {?}\n */\nexport function projectionDef(selectors) {\n    var /** @type {?} */ noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n    var /** @type {?} */ distributedNodes = new Array(noOfNodeBuckets);\n    for (var /** @type {?} */ i = 0; i < noOfNodeBuckets; i++) {\n        distributedNodes[i] = [];\n    }\n    var /** @type {?} */ componentNode = findComponentHost(currentView);\n    var /** @type {?} */ componentChild = componentNode.child;\n    while (componentChild !== null) {\n        if (!selectors) {\n            distributedNodes[0].push(componentChild);\n        }\n        else if ((componentChild.flags & 3 /* TYPE_MASK */) === 3 /* Element */ ||\n            (componentChild.flags & 3 /* TYPE_MASK */) === 0 /* Container */) {\n            // Only trying to match selectors against:\n            // - elements, excluding text nodes;\n            // - containers that have tagName and attributes associated.\n            if (componentChild.staticData) {\n                for (var /** @type {?} */ i = 0; i < /** @type {?} */ ((selectors)).length; i++) {\n                    if (isNodeMatchingSelector(componentChild.staticData, /** @type {?} */ ((selectors))[i])) {\n                        distributedNodes[i + 1].push(componentChild);\n                        break; // first matching selector \"captures\" a given node\n                    }\n                    else {\n                        distributedNodes[0].push(componentChild);\n                    }\n                }\n            }\n            else {\n                distributedNodes[0].push(componentChild);\n            }\n        }\n        else if ((componentChild.flags & 3 /* TYPE_MASK */) === 1 /* Projection */) {\n            // we don't descent into nodes to re-project (not trying to match selectors against nodes to\n            // re-project)\n            distributedNodes[0].push(componentChild);\n        }\n        componentChild = componentChild.next;\n    }\n    return distributedNodes;\n}\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param {?} nodeIndex\n * @param {?} localIndex - index under which distribution of projected nodes was memorized\n * @param {?=} selectorIndex - 0 means <ng-content> without any selector\n * @return {?}\n */\nexport function projection(nodeIndex, localIndex, selectorIndex) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    var /** @type {?} */ projectedNodes = [];\n    var /** @type {?} */ node = createLNode(nodeIndex, 1 /* Projection */, null, projectedNodes);\n    isParent = false; // self closing\n    var /** @type {?} */ currentParent = node.parent;\n    // re-distribution of projectable nodes is memorized on a component's view level\n    var /** @type {?} */ componentNode = findComponentHost(currentView);\n    // make sure that nodes to project were memorized\n    var /** @type {?} */ nodesForSelector = valueInData(/** @type {?} */ ((/** @type {?} */ ((componentNode.data)).data)), localIndex)[selectorIndex];\n    for (var /** @type {?} */ i = 0; i < nodesForSelector.length; i++) {\n        var /** @type {?} */ nodeToProject = nodesForSelector[i];\n        if ((nodeToProject.flags & 3 /* TYPE_MASK */) === 1 /* Projection */) {\n            var /** @type {?} */ previouslyProjectedNodes = (/** @type {?} */ (nodeToProject)).data;\n            for (var /** @type {?} */ j = 0; j < previouslyProjectedNodes.length; j++) {\n                processProjectedNode(projectedNodes, previouslyProjectedNodes[j], currentParent, currentView);\n            }\n        }\n        else {\n            processProjectedNode(projectedNodes, /** @type {?} */ (nodeToProject), currentParent, currentView);\n        }\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param {?} viewState ViewState for which we want a host element node\n * @return {?} The host node\n */\nfunction findComponentHost(viewState) {\n    var /** @type {?} */ viewRootLNode = viewState.node;\n    while ((viewRootLNode.flags & 3 /* TYPE_MASK */) === 2 /* View */) {\n        ngDevMode && assertNotNull(viewState.parent, 'viewState.parent');\n        viewState = /** @type {?} */ ((viewState.parent));\n        viewRootLNode = viewState.node;\n    }\n    ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n    ngDevMode && assertNotNull(viewRootLNode.data, 'node.data');\n    return /** @type {?} */ (viewRootLNode);\n}\n/**\n * Adds a ViewState or a ContainerState to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @template T\n * @param {?} state The ViewState or ContainerState to add to the view tree\n * @return {?} The state passed in\n */\nexport function addToViewTree(state) {\n    currentView.tail ? (currentView.tail.next = state) : (currentView.child = state);\n    currentView.tail = state;\n    return state;\n}\n/**\n * A special value which designates that a value has not changed.\n */\nexport var /** @type {?} */ NO_CHANGE = /** @type {?} */ ({});\n/**\n * Create interpolation bindings with variable number of arguments.\n *\n * If any of the arguments change, then the interpolation is concatenated\n * and causes an update.\n *\n * @param {?} values an array of values to diff.\n * @return {?}\n */\nexport function bindV(values) {\n    var /** @type {?} */ different;\n    var /** @type {?} */ parts;\n    if (different = creationMode) {\n        // make a copy of the array.\n        if (typeof currentView.bindingStartIndex !== 'number') {\n            bindingIndex = currentView.bindingStartIndex = data.length;\n        }\n        data[bindingIndex++] = parts = values.slice();\n    }\n    else {\n        parts = data[bindingIndex++];\n        different = false;\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            different = different || values[i] !== NO_CHANGE && isDifferent(values[i], parts[i]);\n            if (different && values[i] !== NO_CHANGE) {\n                parts[i] = values[i];\n            }\n        }\n    }\n    if (different) {\n        var /** @type {?} */ str = stringify(parts[0]);\n        for (var /** @type {?} */ i = 1; i < parts.length; i++) {\n            str += stringify(parts[i]);\n        }\n        return str;\n    }\n    else {\n        return NO_CHANGE;\n    }\n}\n/**\n * Create a single value binding without interpolation.\n *\n * @template T\n * @param {?} value Value to diff\n * @return {?}\n */\nexport function bind(value) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        if (typeof currentView.bindingStartIndex !== 'number') {\n            bindingIndex = currentView.bindingStartIndex = data.length;\n        }\n        data[bindingIndex++] = value;\n    }\n    else {\n        if (different = value !== NO_CHANGE && isDifferent(data[bindingIndex], value)) {\n            data[bindingIndex] = value;\n        }\n        bindingIndex++;\n    }\n    return different ? value : NO_CHANGE;\n}\n/**\n * Create an interpolation bindings with 1 arguments.\n *\n * @param {?} prefix static value used for concatenation only.\n * @param {?} value value checked for change.\n * @param {?} suffix static value used for concatenation only.\n * @return {?}\n */\nexport function bind1(prefix, value, suffix) {\n    return bind(value) === NO_CHANGE ? NO_CHANGE : prefix + stringify(value) + suffix;\n}\n/**\n * Create an interpolation bindings with 2 arguments.\n *\n * @param {?} prefix\n * @param {?} v0 value checked for change\n * @param {?} i0\n * @param {?} v1 value checked for change\n * @param {?} suffix\n * @return {?}\n */\nexport function bind2(prefix, v0, i0, v1, suffix) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        if (typeof currentView.bindingStartIndex !== 'number') {\n            bindingIndex = currentView.bindingStartIndex = data.length;\n        }\n        data[bindingIndex++] = v0;\n        data[bindingIndex++] = v1;\n    }\n    else {\n        var /** @type {?} */ part0 = data[bindingIndex++];\n        var /** @type {?} */ part1 = data[bindingIndex++];\n        if (v0 === NO_CHANGE)\n            v0 = part0;\n        if (v1 === NO_CHANGE)\n            v1 = part1;\n        if (different = (isDifferent(part0, v0) || isDifferent(part1, v1))) {\n            data[bindingIndex - 2] = v0;\n            data[bindingIndex - 1] = v1;\n        }\n    }\n    return different ? prefix + stringify(v0) + i0 + stringify(v1) + suffix : NO_CHANGE;\n}\n/**\n * Create an interpolation bindings with 3 arguments.\n *\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} suffix\n * @return {?}\n */\nexport function bind3(prefix, v0, i0, v1, i1, v2, suffix) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        if (typeof currentView.bindingStartIndex !== 'number') {\n            bindingIndex = currentView.bindingStartIndex = data.length;\n        }\n        data[bindingIndex++] = v0;\n        data[bindingIndex++] = v1;\n        data[bindingIndex++] = v2;\n    }\n    else {\n        var /** @type {?} */ part0 = data[bindingIndex++];\n        var /** @type {?} */ part1 = data[bindingIndex++];\n        var /** @type {?} */ part2 = data[bindingIndex++];\n        if (v0 === NO_CHANGE)\n            v0 = part0;\n        if (v1 === NO_CHANGE)\n            v1 = part1;\n        if (v2 === NO_CHANGE)\n            v2 = part2;\n        if (different = (isDifferent(part0, v0) || isDifferent(part1, v1) || isDifferent(part2, v2))) {\n            data[bindingIndex - 3] = v0;\n            data[bindingIndex - 2] = v1;\n            data[bindingIndex - 1] = v2;\n        }\n    }\n    return different ? prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + suffix :\n        NO_CHANGE;\n}\n/**\n * Create an interpolation binding with 4 arguments.\n *\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} suffix\n * @return {?}\n */\nexport function bind4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        if (typeof currentView.bindingStartIndex !== 'number') {\n            bindingIndex = currentView.bindingStartIndex = data.length;\n        }\n        data[bindingIndex++] = v0;\n        data[bindingIndex++] = v1;\n        data[bindingIndex++] = v2;\n        data[bindingIndex++] = v3;\n    }\n    else {\n        var /** @type {?} */ part0 = data[bindingIndex++];\n        var /** @type {?} */ part1 = data[bindingIndex++];\n        var /** @type {?} */ part2 = data[bindingIndex++];\n        var /** @type {?} */ part3 = data[bindingIndex++];\n        if (v0 === NO_CHANGE)\n            v0 = part0;\n        if (v1 === NO_CHANGE)\n            v1 = part1;\n        if (v2 === NO_CHANGE)\n            v2 = part2;\n        if (v3 === NO_CHANGE)\n            v3 = part3;\n        if (different =\n            (isDifferent(part0, v0) || isDifferent(part1, v1) || isDifferent(part2, v2) ||\n                isDifferent(part3, v3))) {\n            data[bindingIndex - 4] = v0;\n            data[bindingIndex - 3] = v1;\n            data[bindingIndex - 2] = v2;\n            data[bindingIndex - 1] = v3;\n        }\n    }\n    return different ?\n        prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/**\n * Create an interpolation binding with 5 arguments.\n *\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} suffix\n * @return {?}\n */\nexport function bind5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        if (typeof currentView.bindingStartIndex !== 'number') {\n            bindingIndex = currentView.bindingStartIndex = data.length;\n        }\n        data[bindingIndex++] = v0;\n        data[bindingIndex++] = v1;\n        data[bindingIndex++] = v2;\n        data[bindingIndex++] = v3;\n        data[bindingIndex++] = v4;\n    }\n    else {\n        var /** @type {?} */ part0 = data[bindingIndex++];\n        var /** @type {?} */ part1 = data[bindingIndex++];\n        var /** @type {?} */ part2 = data[bindingIndex++];\n        var /** @type {?} */ part3 = data[bindingIndex++];\n        var /** @type {?} */ part4 = data[bindingIndex++];\n        if (v0 === NO_CHANGE)\n            v0 = part0;\n        if (v1 === NO_CHANGE)\n            v1 = part1;\n        if (v2 === NO_CHANGE)\n            v2 = part2;\n        if (v3 === NO_CHANGE)\n            v3 = part3;\n        if (v4 === NO_CHANGE)\n            v4 = part4;\n        if (different =\n            (isDifferent(part0, v0) || isDifferent(part1, v1) || isDifferent(part2, v2) ||\n                isDifferent(part3, v3) || isDifferent(part4, v4))) {\n            data[bindingIndex - 5] = v0;\n            data[bindingIndex - 4] = v1;\n            data[bindingIndex - 3] = v2;\n            data[bindingIndex - 2] = v3;\n            data[bindingIndex - 1] = v4;\n        }\n    }\n    return different ?\n        prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n            stringify(v4) + suffix :\n        NO_CHANGE;\n}\n/**\n * Create an interpolation binding with 6 arguments.\n *\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} suffix\n * @return {?}\n */\nexport function bind6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        if (typeof currentView.bindingStartIndex !== 'number') {\n            bindingIndex = currentView.bindingStartIndex = data.length;\n        }\n        data[bindingIndex++] = v0;\n        data[bindingIndex++] = v1;\n        data[bindingIndex++] = v2;\n        data[bindingIndex++] = v3;\n        data[bindingIndex++] = v4;\n        data[bindingIndex++] = v5;\n    }\n    else {\n        var /** @type {?} */ part0 = data[bindingIndex++];\n        var /** @type {?} */ part1 = data[bindingIndex++];\n        var /** @type {?} */ part2 = data[bindingIndex++];\n        var /** @type {?} */ part3 = data[bindingIndex++];\n        var /** @type {?} */ part4 = data[bindingIndex++];\n        var /** @type {?} */ part5 = data[bindingIndex++];\n        if (v0 === NO_CHANGE)\n            v0 = part0;\n        if (v1 === NO_CHANGE)\n            v1 = part1;\n        if (v2 === NO_CHANGE)\n            v2 = part2;\n        if (v3 === NO_CHANGE)\n            v3 = part3;\n        if (v4 === NO_CHANGE)\n            v4 = part4;\n        if (v5 === NO_CHANGE)\n            v5 = part5;\n        if (different =\n            (isDifferent(part0, v0) || isDifferent(part1, v1) || isDifferent(part2, v2) ||\n                isDifferent(part3, v3) || isDifferent(part4, v4) || isDifferent(part5, v5))) {\n            data[bindingIndex - 6] = v0;\n            data[bindingIndex - 5] = v1;\n            data[bindingIndex - 4] = v2;\n            data[bindingIndex - 3] = v3;\n            data[bindingIndex - 2] = v4;\n            data[bindingIndex - 1] = v5;\n        }\n    }\n    return different ?\n        prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n            stringify(v4) + i4 + stringify(v5) + suffix :\n        NO_CHANGE;\n}\n/**\n * Create an interpolation binding with 7 arguments.\n *\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} suffix\n * @return {?}\n */\nexport function bind7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        if (typeof currentView.bindingStartIndex !== 'number') {\n            bindingIndex = currentView.bindingStartIndex = data.length;\n        }\n        data[bindingIndex++] = v0;\n        data[bindingIndex++] = v1;\n        data[bindingIndex++] = v2;\n        data[bindingIndex++] = v3;\n        data[bindingIndex++] = v4;\n        data[bindingIndex++] = v5;\n        data[bindingIndex++] = v6;\n    }\n    else {\n        var /** @type {?} */ part0 = data[bindingIndex++];\n        var /** @type {?} */ part1 = data[bindingIndex++];\n        var /** @type {?} */ part2 = data[bindingIndex++];\n        var /** @type {?} */ part3 = data[bindingIndex++];\n        var /** @type {?} */ part4 = data[bindingIndex++];\n        var /** @type {?} */ part5 = data[bindingIndex++];\n        var /** @type {?} */ part6 = data[bindingIndex++];\n        if (v0 === NO_CHANGE)\n            v0 = part0;\n        if (v1 === NO_CHANGE)\n            v1 = part1;\n        if (v2 === NO_CHANGE)\n            v2 = part2;\n        if (v3 === NO_CHANGE)\n            v3 = part3;\n        if (v4 === NO_CHANGE)\n            v4 = part4;\n        if (v5 === NO_CHANGE)\n            v5 = part5;\n        if (v6 === NO_CHANGE)\n            v6 = part6;\n        if (different =\n            (isDifferent(part0, v0) || isDifferent(part1, v1) || isDifferent(part2, v2) ||\n                isDifferent(part3, v3) || isDifferent(part4, v4) || isDifferent(part5, v5) ||\n                isDifferent(part6, v6))) {\n            data[bindingIndex - 7] = v0;\n            data[bindingIndex - 6] = v1;\n            data[bindingIndex - 5] = v2;\n            data[bindingIndex - 4] = v3;\n            data[bindingIndex - 3] = v4;\n            data[bindingIndex - 2] = v5;\n            data[bindingIndex - 1] = v6;\n        }\n    }\n    return different ?\n        prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n            stringify(v4) + i4 + stringify(v5) + i5 + stringify(v6) + suffix :\n        NO_CHANGE;\n}\n/**\n * Create an interpolation binding with 8 arguments.\n *\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} i6\n * @param {?} v7\n * @param {?} suffix\n * @return {?}\n */\nexport function bind8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        if (typeof currentView.bindingStartIndex !== 'number') {\n            bindingIndex = currentView.bindingStartIndex = data.length;\n        }\n        data[bindingIndex++] = v0;\n        data[bindingIndex++] = v1;\n        data[bindingIndex++] = v2;\n        data[bindingIndex++] = v3;\n        data[bindingIndex++] = v4;\n        data[bindingIndex++] = v5;\n        data[bindingIndex++] = v6;\n        data[bindingIndex++] = v7;\n    }\n    else {\n        var /** @type {?} */ part0 = data[bindingIndex++];\n        var /** @type {?} */ part1 = data[bindingIndex++];\n        var /** @type {?} */ part2 = data[bindingIndex++];\n        var /** @type {?} */ part3 = data[bindingIndex++];\n        var /** @type {?} */ part4 = data[bindingIndex++];\n        var /** @type {?} */ part5 = data[bindingIndex++];\n        var /** @type {?} */ part6 = data[bindingIndex++];\n        var /** @type {?} */ part7 = data[bindingIndex++];\n        if (v0 === NO_CHANGE)\n            v0 = part0;\n        if (v1 === NO_CHANGE)\n            v1 = part1;\n        if (v2 === NO_CHANGE)\n            v2 = part2;\n        if (v3 === NO_CHANGE)\n            v3 = part3;\n        if (v4 === NO_CHANGE)\n            v4 = part4;\n        if (v5 === NO_CHANGE)\n            v5 = part5;\n        if (v6 === NO_CHANGE)\n            v6 = part6;\n        if (v7 === NO_CHANGE)\n            v7 = part7;\n        if (different =\n            (isDifferent(part0, v0) || isDifferent(part1, v1) || isDifferent(part2, v2) ||\n                isDifferent(part3, v3) || isDifferent(part4, v4) || isDifferent(part5, v5) ||\n                isDifferent(part6, v6) || isDifferent(part7, v7))) {\n            data[bindingIndex - 8] = v0;\n            data[bindingIndex - 7] = v1;\n            data[bindingIndex - 6] = v2;\n            data[bindingIndex - 5] = v3;\n            data[bindingIndex - 4] = v4;\n            data[bindingIndex - 3] = v5;\n            data[bindingIndex - 2] = v6;\n            data[bindingIndex - 1] = v7;\n        }\n    }\n    return different ?\n        prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n            stringify(v4) + i4 + stringify(v5) + i5 + stringify(v6) + i6 + stringify(v7) + suffix :\n        NO_CHANGE;\n}\n/**\n * @template T\n * @param {?} index\n * @param {?=} value\n * @return {?}\n */\nexport function memory(index, value) {\n    return valueInData(data, index, value);\n}\n/**\n * @template T\n * @param {?} data\n * @param {?} index\n * @param {?=} value\n * @return {?}\n */\nfunction valueInData(data, index, value) {\n    ngDevMode && assertDataInRange(index, data);\n    if (value === undefined) {\n        value = data[index];\n    }\n    else {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        if (index >= ngStaticData.length) {\n            ngStaticData[index] = null;\n        }\n        data[index] = value;\n    }\n    return /** @type {?} */ ((value));\n}\n/**\n * @template T\n * @param {?} predicate\n * @param {?=} descend\n * @param {?=} read\n * @return {?}\n */\nexport function query(predicate, descend, read) {\n    ngDevMode && assertPreviousIsParent();\n    var /** @type {?} */ queryList = new QueryList();\n    var /** @type {?} */ query = currentQuery || (currentQuery = new QueryState_());\n    query.track(queryList, predicate, descend, read);\n    return queryList;\n}\n/**\n * @return {?}\n */\nfunction assertPreviousIsParent() {\n    assertEqual(isParent, true, 'isParent');\n}\n/**\n * @return {?}\n */\nfunction assertHasParent() {\n    assertNotEqual(previousOrParentNode.parent, null, 'isParent');\n}\n/**\n * @param {?} index\n * @param {?=} arr\n * @return {?}\n */\nfunction assertDataInRange(index, arr) {\n    if (arr == null)\n        arr = data;\n    assertLessThan(arr ? arr.length : 0, index, 'data.length');\n}\n//# sourceMappingURL=instructions.js.map","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, ISubscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs/Observable\";\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\nimport { SpotifyAuthResponse } from \"../shared/spotify-auth-response.i\";\n\n@Injectable()\nexport class TokenService {\n\n  private token: string = \"\";\n  private token$ = new BehaviorSubject(this.token);\n\n  public get oAuthToken(): string{\n    return this.token;\n  }\n\n  public clearToken(): void{\n    this.token = \"\";\n    this.token$.next(this.token);\n  }\n\n  public get authHeader(): {[name: string]: string}{\n    return this.token ? { Authorization: `Bearer ${this.token}` } : {};\n  }\n\n  public get authTokens(): Observable<string>{\n    return this.token$.asObservable();\n  }\n\n  public setAuthToken(spotifyResponse: SpotifyAuthResponse): boolean {\n  \n    if (!!spotifyResponse && !!spotifyResponse.access_token) {\n      this.token = spotifyResponse.access_token;\n    } else {\n      this.token = \"\";\n    }\n    this.token$.next(this.token);\n    return !!this.token\n  }\n\n}","import { Injectable } from '@angular/core';\n\nimport { AuthConfig } from '../shared/spotify-auth-config.i';\nimport { SpotifyAuthResponse } from '../shared/spotify-auth-response.i';\nimport { ScopesBuilder } from '../shared/scopes-builder';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class AuthService {\n\n  private requestAuthUrl = 'https://accounts.spotify.com/authorize';\n  private authorized$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  \n  private authConfig: AuthConfig = { \n    client_id: \"3af5f43840144db2a5ef883b56c5fb7e\",  // WebPortal App Id. Shoud be config\n    response_type: \"token\",\n    redirect_uri: \"http://localhost:3000/authorized\",  // My URL\n    state: \"\",\n    show_dialog: true,\n    scope: new ScopesBuilder().build()\n  };\n\n  public authorize(){ \n    window.location.href = this.buildAuthUrl();\n  }\n\n  //Signal someone, that router can navigate somewhere\n  public authorized(): void{\n    console.log('Called auth');\n    this.authorized$.next(true);\n  }\n\n  public get authorizedStream(): Observable<boolean>{\n    return this.authorized$.asObservable();\n  }\n  \n  public configure(config: AuthConfig): AuthService{\n    // Validate Config\n    this.authConfig = config;\n    return this;\n  }\n\n  private buildAuthUrl(): string{\n\n    let params = [];\n    for (const [key, value] of Object.entries(this.authConfig)) {\n      if(typeof(value) == 'object'){\n        params.push(`${key}=${(value as string[]).join(\" \")}`);\n      }else{\n        params.push(`${key}=${value}`);\n      }\n    }\n\n    return `${this.requestAuthUrl}?${params.join('&')}`;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild } from '@angular/router';\nimport { fromPairs } from 'lodash';\n\nimport { AuthService } from './auth.service';\nimport { TokenService } from './token.service';\nimport { SpotifyAuthResponse } from '../shared/spotify-auth-response.i';\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanActivateChild {\n\n  constructor(private authService: AuthService, private tokenSvc: TokenService){}\n  \n  public canActivate(\n    next: ActivatedRouteSnapshot, state: RouterStateSnapshot):  boolean {\n    return this.canActivateChild(next, state);\n  }\n\n  public canActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) : boolean{\n    const response = this.extractApiResponse(next.fragment);\n    if(response){\n      this.tokenSvc.setAuthToken(response);\n    }\n    return !!response;\n  }\n\n  private extractApiResponse(fragment: string): SpotifyAuthResponse | null{\n    if(!!fragment){\n      return fromPairs(fragment.split('&').map((s) => s.split('='))) as SpotifyAuthResponse;\n    }\n    return null;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function tap<T>(next: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DoSubscriber<T> extends Subscriber<T> {\n\n  private safeSubscriber: Subscriber<T>;\n\n  constructor(destination: Subscriber<T>,\n              nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              error?: (e: any) => void,\n              complete?: () => void) {\n    super(destination);\n\n    const safeSubscriber = new Subscriber<T>(nextOrObserver, error, complete);\n    safeSubscriber.syncErrorThrowable = true;\n    this.add(safeSubscriber);\n    this.safeSubscriber = safeSubscriber;\n  }\n\n  protected _next(value: T): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.next(value);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.next(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.error(err);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.complete();\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { tap as higherOrder } from '../operators/tap';\n\n/* tslint:disable:max-line-length */\nexport function _do<T>(this: Observable<T>, next: (x: T) => void, error?: (e: any) => void, complete?: () => void): Observable<T>;\nexport function _do<T>(this: Observable<T>, observer: PartialObserver<T>): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nexport function _do<T>(this: Observable<T>, nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): Observable<T> {\n  return higherOrder(<any>nextOrObserver, error, complete)(this) as Observable<T>;\n}\n","\nimport { Observable } from '../../Observable';\nimport { _do } from '../../operator/do';\n\nObservable.prototype.do = _do;\nObservable.prototype._do = _do;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    do: typeof _do;\n    _do: typeof _do;\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/observable';\nimport 'rxjs/add/operator/do';\n\nimport { TokenService } from './token.service';\n\n@Injectable()\nexport abstract class SpotifyAuthInterceptor implements HttpInterceptor {\n  constructor(private tokenSvc: TokenService) {}\n\n  abstract doOnError(err: any): void;\n\n  public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    const authReq = req.clone({ setHeaders: this.tokenSvc.authHeader });\n    return next.handle(authReq)._do(\n      (event: HttpEvent<any>) => {}, \n      this.doOnError\n    );\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'spotify-auth',\n  template: `<h3>Authorizing&hellip;</h3>`,\n  styles: [``]\n})\nexport class SpotifyAuthComponent implements OnInit {\n  \n  public constructor(private authService: AuthService){}\n\n  public ngOnInit(): void {\n    //Send it back to app home\n    this.authService.authorized();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { Routes } from '@angular/router';\n\nimport { SpotifyAuthComponent } from './component/spotify-auth.component';\nimport { AuthService } from './service/auth.service';\nimport { TokenService } from './service/token.service';\nimport { AuthGuard } from './service/auth.guard';\n\nconst routes: Routes= [{\n  path: 'authorized',\n  canActivate: [ AuthGuard ],\n  component: SpotifyAuthComponent\n}];\n\n@NgModule({\n  declarations: [SpotifyAuthComponent],\n  providers: []\n})\nexport class SpotifyAuthModule { \n\n  public static authRoutes(): Routes {\n    return routes;\n  }\n\n  public static forRoot() : ModuleWithProviders {\n    return {\n      ngModule: SpotifyAuthModule,\n      providers: [ \n        AuthService,\n        TokenService,\n        AuthGuard\n      ]\n    }\n  }\n}\n"],"names":["ScopesBuilder","USERS","PLAYLISTS","HISTORY","LIBRARY","CONNECT","FOLLOW","PLAYBACK","_i","args","this","scopes","buffer","forEach","scope","push","Object","keys","property","join","READ_PRIVATE","READ_EMAIL","READ_BIRTHDATE","MODIFY_PRIVATE","MODIFY_PPUBLIC","READ_COLLABORATIVE","TOP_READ","READ_RECENTLY_PLAYED","READ","MODIFY","READ_CURRENTLY_PLAYING","MODIFY_PLAYBACK_STATE","READ_PLAYBACK_STATE","STREAMING","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__window","window","__self","self","WorkerGlobalScope","_root","global","Error","x","isArray","tryCatchTarget","e","apply","errorObject_1","fn","tryCatcher","errors","_super","err","map","toString","name","stack","message","unsubscribe","_unsubscribe","empty","Subscription","hasErrors","closed","_parent","_parents","_subscriptions","index","len","remove","isFunction_1","tryCatch_1","UnsubscriptionError_1","flattenUnsubscriptionErrors","isArray_1","sub","isObject_1","concat","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","indexOf","splice","parent","reduce","errs","next","value","error","complete","Symbol","root_1","exports","for","destinationOrNext","destination","Observer_1","obj","Subscriber","rxSubscriber_1","trustedSubscriber","syncErrorThrowable","add","SafeSubscriber","subscriber","isStopped","_next","_error","_complete","Subscription_1","_parentSubscriber","observerOrNext","context","bind","_context","__tryOrSetError","__tryOrUnsub","syncErrorValue","syncErrorThrown","wrappedComplete","_this","nextOrObserver","Subscriber_1","$$observable","observable","getSymbolObservable","fns","input","prev","noop_1","pipeFromArray","subscribe","_subscribe","Observable","operator","source","sink","toSubscriber_1","_trySubscribe","PromiseCtor","Rx","config","Promise","resolve","reject","observable_1","operations","pipe_1","scheduler","_isScalar","ScalarObservable","state","done","schedule","dispatch","Observable_1","EmptyObservable","arg","array","ArrayObservable","isScheduler_1","pop","ScalarObservable_1","EmptyObservable_1","count","then","root","iterator","Set_1","Map_1","getOwnPropertyNames","key","symbolIteratorPonyfill","outerValue","outerIndex","InnerSubscriber","notifyNext","notifyError","notifyComplete","outerSubscriber","result","InnerSubscriber_1","isArrayLike_1","isPromise_1","setTimeout","iterator_1","item","obs","TypeError","msg","OuterSubscriber","innerValue","innerIndex","innerSub","project","resultSelector","concurrent","Number","POSITIVE_INFINITY","lift","MergeMapOperator","observer","MergeMapSubscriber","active","_tryNext","_innerSub","ish","subscribeToResult_1","hasCompleted","_notifyResultSelector","shift","OuterSubscriber_1","mergeMap_1","identity_1","observables","last","mergeAll_1","ArrayObservable_1","subject","SubjectSubscription","observers","subscriberIndex","Subject","SubjectSubscriber","AnonymousSubject","ObjectUnsubscribedError_1","copy","slice","hasError","thrownError","SubjectSubscription_1","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","connect","refCount","sharedConnection","_connection","subjectFactory","ConnectableObservable","getSubject","_subject","_isComplete","ConnectableSubscriber","refCount_1","connectableProto","writable","Subject_1","subjectOrSubjectFactory","selector","MulticastOperator","ConnectableObservable_1","multicast_1","shareSubjectFactory","share_1","InjectionToken","_desc","ngMetadataName","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","props","parentClass","chainFn","metaCtor","makeMetadataCtor","DecoratorFactory","objOrType","annotationInstance","TypeDecorator","cls","defineProperty","annotationCls","values","propName","makeParamDecorator","ParamDecoratorFactory","_a","annotation","ParamDecorator","unusedKey","parameters","attributeName","ChangeDetectionStrategy","OnPush","Default","Component","c","tslib_1.__assign","changeDetection","dir","NgModule","pure","ngModule","ViewEncapsulation","Emulated","Native","None","VERSION","full","major","split","minor","patch","Inject","token","Optional","Injectable","Self","SkipSelf","__global","_global","promise","_symbolIterator","getSymbolIterator","Symbol_1","Map","scheduleMicroTask","Zone","current","looseIdentical","a","isNaN","stringify","overriddenName","res","newLineIndex","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","_NullInjector","get","notFoundValue","Injector","options","StaticInjector","providers","NULL","IDENT","CIRCULAR","MULTI_PROVIDER_FN","GET_PROPERTY_NAME","USE_VALUE","objWithPropertyToExtract","getClosureSafeProperty","provide","String","useValue","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","providerDeps","j","annotations","useExisting","computeDeps","useFactory","useClass","resolveProvider","multi","multiProvider","multiProviderMixError","record","tryResolveToken","tokenPath","unshift","formatError","tokens","v","undefined","depRecords","depRecord","childRecord","resolveToken","text","charAt","substr","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noAnnotationError","typeOrFunc","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","factory","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","annotationArgs","ctor","parentProto","getPrototypeOf","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","params_1","_extractToken","constructDependencies","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","normalizedProvidersMap","existing","mergeResolvedReflectiveProviders","_normalizeProviders","from","some","metadata","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","_new","_getMaxNumberOfObjects","_instantiate","originalException","dep","_getByReflectiveDependency","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","_mapProviders","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID_RANDOM_PROVIDER","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","Console","log","warn","_throwError","Compiler","compileModuleSync","moduleType","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","CompilerFactory","ComponentRef","ComponentFactory","trace","events","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","component","ComponentFactoryResolver","ComponentFactoryBoundToModule","componentType","ngContentSelectors","inputs","outputs","tslib_1.__extends","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","wtf","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","flags","createScope","wtfLeave","returnValue","leaveScope","r","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","schedulerFn","errorFn","completeFn","NgZone","_b","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","zone","_nesting","_outer","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","target","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","clear","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","_devMode","ALLOW_MULTIPLE_PLATFORMS","isDevMode","getPlatform","destroyed","PlatformRef","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","ngZoneOption","getNgZone","ngZoneInjector","moduleRef","exceptionHandler","onDestroy","errorHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","instance","ngDoBootstrap","destroy","module","listener","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","stableSub","unstableSub","merge","share","componentOrFactory","componentFactory","selectorOrNode","compRef","_unloadComponent","location","nativeElement","_loadComponent","_tickScope","view","detectChanges","checkNoChanges","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","hostView","ngOnDestroy","list","el","Renderer","RendererFactory2","Renderer2","ElementRef","QueryList","dirty","_results","changes","filter","find","init","toArray","reset","flatten","flat","flatItem","notifyOnChanges","setDirty","TemplateRef","ViewContainerRef","ChangeDetectorRef","EventListener","EmbeddedViewRef","ViewRef","DebugNode","nativeNode","_debugContext","DebugElement","addChild","listeners","references","providerTokens","attributes","classes","styles","childNodes","child","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","insertBefore","refChild","newChild","refIndex","query","predicate","queryAll","matches","_queryElementChildren","element","node","queryAllNodes","_queryNodeChildren","parentNode","triggerEventHandler","eventName","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","comparator","iterator1","iterator2","item1","item2","areIterablesEqual","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","o","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","getPreviousIndex","adjPreviousIndex","currentIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","factories","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","defaultIterableDiffers","defaultKeyValueDiffers","LOCALE_ID","parentPlatformFactory","desc","marker","createPlatformFactory","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","SecurityContext","NONE","HTML","STYLE","SCRIPT","URL","RESOURCE_URL","Sanitizer","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","_addDebugContext","logError","viewDestroyedError","action","NOOP","_tokenKeyCache","tokenKey","checkBinding","def","bindingIdx","oldValues","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","componentView","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","isComponentView","splitDepsDsl","sourceName","getParentRenderElement","renderHost","renderParent","componentRendererType","encapsulation","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","NS_PREFIX_RE","splitNamespace","match","createElement","elDef","ns","createComment","parentEl","selectRootElement","attrs","name_2","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","outputIndex","checkAndUpdateElementValue","securityContext","renderValue","binding","elData","sanitizer","sanitize","removeAttribute","setElementAttribute","addClass","removeClass","unit","suffix","setStyle","removeStyle","setElementStyle","bindView","setProperty","UNDEFINED_VALUE","InjectorRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","data","depDef","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","injectable","depValues","_createClass","_callFactory","attachEmbeddedView","parentView","elementData","viewIndex","addToArray","vcElementData","dvcElementData","projectedViews","template","_projectedViews","viewDef","nodeFlags","parentNodeDef","childFlags","markNodeAsProjectedTemplate","attachProjectedView","renderAttachEmbeddedView","detachEmbeddedView","removeFromArray","renderDetachView","prevView","prevRenderNode","arr","EMPTY_CONTEXT","ComponentFactory_","viewDefFactory","_inputs","_outputs","inputsArr","templateName","outputsArr","componentNodeIndex","ComponentRef_","ViewRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","Injector_","ViewContainerRef_","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","viewRef_","viewData","move","oldViewIndex","newViewIndex","detach","_viewContainerRef","_appRef","renderNodes","markForCheck","fs","rendererFactory","begin","end","reattach","disposables","vcRef","TemplateRef_","_parentView","createInjector","allowPrivateServices","RendererAdapter","namespaceAndName","createViewRoot","hostElement","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","attributeValue","setBindingDebugInfo","setElementClass","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","provDef","initNgModule","lifecycles","callNgModuleLifecycle","RendererV1TokenKey","RendererV1","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","createPipeInstance","createClass","createDirectiveInstance","eventHandlerClosure","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","findCompView","viewContainer","cdView","providerDef_1","allProviders","publicProviders","providerData","updateProp","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","directChildFlags","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","queryList","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","valueType","matchedQueries","getQueryValue","childMatchedQueries","embeddedView","dvc","projectedView","queryValueType","prefix","_addInterpolationPart","anchorDef","createView","initView","createViewNodes","compRenderer","rendererType","createRenderer","componentProvider","outputCount","bindingCount","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateTextInline","directive","ngOnChanges","ngOnInit","ngDoCheck","pipe","transform","checkAndUpdatePureExpressionInline","checkAndUpdateNodeInline","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyNode","destroyViewNodes","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","callViewAction","viewState","execProjectedViewsAction","queryFlags","staticDynamicQueryFlag","checkType","nodeCount","initServicesIfNeeded","services","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","calcHasOverrides","applyProviderOverrides","applyProviderOverridesToNgModule","comp","compFactory","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","findElementIndicesWithOverwrittenProviders","applyProviderOverridesToElement","elIndex","checkIndex","_currentAction","_currentView","_currentNodeIndex","nextDirectiveWithBinding","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","attr","CAMEL_CASE_REGEXP","m","toLowerCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","fullName","style","NgModuleFactory_","_ngModuleDefFactory","stringifyValueForError","assertNotNull","actual","assertNotEqual","expected","assertThrow","serializer","ngDevMode","currentView","QueryList_","_valuesTree","_values","_refresh","ngStaticData","cleanup","tail","bindingStartIndex","creationMode","viewHookStartIndex","_value","BehaviorSubject","getValue","TokenService","token$","Authorization","asObservable","spotifyResponse","access_token","client_id","response_type","redirect_uri","show_dialog","build","AuthService","href","buildAuthUrl","authorized$","authConfig","entries","requestAuthUrl","authService","tokenSvc","AuthGuard","canActivateChild","response","extractApiResponse","fragment","setAuthToken","fromPairs","DoOperator","DoSubscriber","safeSubscriber","tap_1","do","do_1","_do","SpotifyAuthInterceptor","req","authReq","clone","setHeaders","authHeader","handle","doOnError","SpotifyAuthComponent","authorized","routes","path","canActivate","SpotifyAuthModule","declarations"],"mappings":"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"}